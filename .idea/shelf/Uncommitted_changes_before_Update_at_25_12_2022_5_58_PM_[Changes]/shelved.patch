Index: app/src/main/java/com/poly/restaurant/ui/activities/product/desserts/DessertFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.poly.restaurant.ui.activities.product.desserts;\r\n\r\nimport androidx.appcompat.widget.SearchView;\r\nimport androidx.lifecycle.MutableLiveData;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProvider;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.TextView;\r\n\r\nimport com.poly.restaurant.R;\r\nimport com.poly.restaurant.data.models.Product;\r\nimport com.poly.restaurant.databinding.FragmentDessertBinding;\r\nimport com.poly.restaurant.preference.AppSharePreference;\r\nimport com.poly.restaurant.ui.activities.product.FoodActivity;\r\nimport com.poly.restaurant.ui.activities.product.appetizer.adapter.IOnEventProductListener;\r\nimport com.poly.restaurant.ui.activities.product.appetizer.adapter.ProductAdapter;\r\nimport com.poly.restaurant.ui.base.BaseFragment;\r\nimport com.poly.restaurant.utils.Constants;\r\nimport com.poly.restaurant.utils.helps.ViewModelFactory;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class DessertFragment extends BaseFragment {\r\n    private FragmentDessertBinding binding;\r\n    private DessertViewModel mViewModel;\r\n    private ProductAdapter adapter;\r\n    private List<Product> mListDessert;\r\n    private AppSharePreference sharePreference;\r\n\r\n    public static DessertFragment newInstance() {\r\n        return new DessertFragment();\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container,\r\n                             @Nullable Bundle savedInstanceState) {\r\n        ViewModelFactory factory = new ViewModelFactory(getContext());\r\n        mViewModel = new ViewModelProvider(this, factory).get(DessertViewModel.class);\r\n        binding = FragmentDessertBinding.inflate(getLayoutInflater());\r\n        binding.prgLoadProduct.setVisibility(View.VISIBLE);\r\n        mListDessert = new ArrayList<>();\r\n        sharePreference = new AppSharePreference(getContext());\r\n\r\n        adapter = new ProductAdapter(mListDessert, new IOnEventProductListener() {\r\n            @Override\r\n            public void onClickIncrease(@NonNull Product product, @NonNull TextView tvQuantity, int position) {\r\n                Constants.handleIncrease(tvQuantity, Constants.TYPE_IN_PRODUCT);\r\n                int quantity = Integer.parseInt(tvQuantity.getText().toString().subSequence(1, tvQuantity.getText().toString().length()).toString());\r\n                handleAddProduct(product, quantity);\r\n                adapter.getMListProduct().get(position).setAmount(quantity);\r\n            }\r\n\r\n            @Override\r\n            public void onClickDecrease(@NonNull Product product, @NonNull TextView tvQuantity, int position) {\r\n                Constants.handleDecrease(tvQuantity, Constants.TYPE_IN_PRODUCT);\r\n                int quantity = Integer.parseInt(tvQuantity.getText().toString().subSequence(1, tvQuantity.getText().toString().length()).toString());\r\n                handleDecreaseProduct(product, quantity);\r\n                adapter.getMListProduct().get(position).setAmount(quantity);\r\n            }\r\n\r\n            @Override\r\n            public void onClickViewItem(@NonNull Product product) {\r\n\r\n            }\r\n        });\r\n        binding.rvDessert.setLayoutManager(new LinearLayoutManager(getContext()));\r\n        binding.rvDessert.setAdapter(adapter);\r\n        mViewModel.mListDessertLiveData.observe(getViewLifecycleOwner(), new Observer<List<Product>>() {\r\n            @Override\r\n            public void onChanged(List<Product> products) {\r\n                if (products != null){\r\n                    for (int i = 0; i < products.size(); i++){\r\n                        if (mViewModel.getListProductByIdTable(sharePreference.getTableId()).size() != 0){\r\n                            for (int j = 0; j < mViewModel.getListProductByIdTable(sharePreference.getTableId()).size(); j++){\r\n                                if (products.get(i).getId().equals(mViewModel.getListProductByIdTable(sharePreference.getTableId()).get(j).getId())){\r\n                                    products.set(i, mViewModel.getListProductByIdTable(sharePreference.getTableId()).get(j));\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    mListDessert = products;\r\n                    adapter.setList(mListDessert);\r\n                    binding.prgLoadProduct.setVisibility(View.GONE);\r\n                }\r\n            }\r\n        });\r\n        mViewModel.callToGetDessert();\r\n        eventScrollRecycleView();\r\n        initListener();\r\n\r\n        return binding.getRoot();\r\n    }\r\n\r\n\r\n    private void eventScrollRecycleView() {\r\n        int height = ((FoodActivity) requireActivity()).findViewById(R.id.view_bottom_sheet).getHeight();\r\n        binding.rvDessert.setPadding(0, 0, 0, height);\r\n        binding.rvDessert.addOnScrollListener(new RecyclerView.OnScrollListener() {\r\n            @Override\r\n            public void onScrollStateChanged(@NonNull RecyclerView recyclerView, int newState) {\r\n                if (newState == 0){\r\n                    ((FoodActivity) requireActivity()).isScrollingLiveData.postValue(false);\r\n                }else{\r\n                    ((FoodActivity) requireActivity()).isScrollingLiveData.postValue(true);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void handleDecreaseProduct(Product product, int quantity) {\r\n        if (mViewModel.getProductById(product.getId(), sharePreference.getTableId()) != null){\r\n            if (quantity == 0){\r\n                mViewModel.deleteProduct(product);\r\n            }\r\n            mViewModel.updateProduct(new Product(\r\n                    product.getIdProduct(),\r\n                    product.getId(), product.getName(), product.getUrlImage(), product.getPrice(), product.getTotal(), quantity,\r\n                    product.getType(),\r\n                    product.getIdCategory(),\r\n                    sharePreference.getTableId()\r\n            ));\r\n\r\n        }\r\n    }\r\n\r\n    private void handleAddProduct(Product product, int quantity) {\r\n        if (mViewModel.getProductById(product.getId(), sharePreference.getTableId()) == null){\r\n            mViewModel.insertProduct(new Product(\r\n                    null,\r\n                    product.getId(), product.getName(), product.getUrlImage(), product.getPrice(), product.getTotal(), quantity,\r\n                    product.getType(),\r\n                    product.getIdCategory(),\r\n                    sharePreference.getTableId()\r\n            ));\r\n        }else{\r\n            mViewModel.updateAmountProduct(quantity, product.getId(), sharePreference.getTableId());\r\n        }\r\n    }\r\n\r\n    private void initListener() {\r\n        SearchView searchView = ((FoodActivity) getActivity()).findViewById(R.id.sv_food);\r\n        searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\r\n            @Override\r\n            public boolean onQueryTextSubmit(String query) {\r\n                return false;\r\n            }\r\n\r\n            @Override\r\n            public boolean onQueryTextChange(String newText) {\r\n                Constants.filterList(newText, mListDessert, adapter);\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onResume() {\r\n        initListener();\r\n//        adapter.setList(mViewModel.getListProductByIdTable(sharePreference.getTableId()));\r\n        super.onResume();\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/poly/restaurant/ui/activities/product/desserts/DessertFragment.java b/app/src/main/java/com/poly/restaurant/ui/activities/product/desserts/DessertFragment.java
--- a/app/src/main/java/com/poly/restaurant/ui/activities/product/desserts/DessertFragment.java	(revision 0a0186a71dc296c156595856ed5b19b2c0d67d76)
+++ b/app/src/main/java/com/poly/restaurant/ui/activities/product/desserts/DessertFragment.java	(date 1671965616068)
@@ -17,6 +17,7 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.TextView;
+import android.widget.Toast;
 
 import com.poly.restaurant.R;
 import com.poly.restaurant.data.models.Product;
@@ -56,18 +57,25 @@
         adapter = new ProductAdapter(mListDessert, new IOnEventProductListener() {
             @Override
             public void onClickIncrease(@NonNull Product product, @NonNull TextView tvQuantity, int position) {
-                Constants.handleIncrease(tvQuantity, Constants.TYPE_IN_PRODUCT);
                 int quantity = Integer.parseInt(tvQuantity.getText().toString().subSequence(1, tvQuantity.getText().toString().length()).toString());
-                handleAddProduct(product, quantity);
-                adapter.getMListProduct().get(position).setAmount(quantity);
+                if (quantity < product.getTotal()){
+                    Constants.handleIncrease(tvQuantity, Constants.TYPE_IN_PRODUCT);
+                    handleAddProduct(product, quantity);
+                    adapter.getMListProduct().get(position).setAmount(quantity);
+                }else{
+                    Toast.makeText(requireContext(), "Không được vượt quá sản lượng", Toast.LENGTH_SHORT).show();
+                }
             }
 
             @Override
             public void onClickDecrease(@NonNull Product product, @NonNull TextView tvQuantity, int position) {
-                Constants.handleDecrease(tvQuantity, Constants.TYPE_IN_PRODUCT);
                 int quantity = Integer.parseInt(tvQuantity.getText().toString().subSequence(1, tvQuantity.getText().toString().length()).toString());
-                handleDecreaseProduct(product, quantity);
-                adapter.getMListProduct().get(position).setAmount(quantity);
+                if (quantity > 0){
+                    quantity --;
+                    tvQuantity.setText("x"+quantity);
+                    handleDecreaseProduct(product, quantity);
+                    adapter.getMListProduct().get(position).setAmount(quantity);
+                }
             }
 
             @Override
@@ -122,16 +130,10 @@
     private void handleDecreaseProduct(Product product, int quantity) {
         if (mViewModel.getProductById(product.getId(), sharePreference.getTableId()) != null){
             if (quantity == 0){
-                mViewModel.deleteProduct(product);
+                mViewModel.deleteProduct(product.getId(), sharePreference.getTableId());
+            }else{
+                mViewModel.updateAmountProduct(quantity, product.getId(), sharePreference.getTableId());
             }
-            mViewModel.updateProduct(new Product(
-                    product.getIdProduct(),
-                    product.getId(), product.getName(), product.getUrlImage(), product.getPrice(), product.getTotal(), quantity,
-                    product.getType(),
-                    product.getIdCategory(),
-                    sharePreference.getTableId()
-            ));
-
         }
     }
 
Index: app/src/main/java/com/poly/restaurant/data/db/dao/ProductDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.poly.restaurant.data.db.dao;\r\n\r\nimport androidx.lifecycle.LiveData;\r\nimport androidx.room.Dao;\r\nimport androidx.room.Delete;\r\nimport androidx.room.Insert;\r\nimport androidx.room.Query;\r\nimport androidx.room.Update;\r\n\r\nimport com.poly.restaurant.data.models.Product;\r\n\r\nimport java.util.List;\r\n\r\n@Dao\r\npublic interface ProductDao {\r\n\r\n    @Query(\"SELECT * FROM Product\")\r\n    LiveData<List<Product>> getProducts();\r\n\r\n    @Query(\"SELECT * FROM Product\")\r\n    List<Product> getListProducts();\r\n\r\n    @Insert\r\n    void insertProduct(Product product);\r\n\r\n    @Update\r\n    void updateProduct(Product product);\r\n\r\n    @Query(\"UPDATE Product SET amount = :amount WHERE id = :id AND idTable = :idTable\")\r\n    void updateAmount(int amount, String id, String idTable);\r\n\r\n    @Query(\"SELECT id FROM Product WHERE id = :id AND idTable = :idTable\")\r\n    String findProductById(String id, String idTable);\r\n\r\n    @Query(\"SELECT * FROM Product WHERE idTable = :idTable\")\r\n    List<Product> getProductByIdTable(String idTable);\r\n\r\n    @Query(\"SELECT * FROM Product WHERE idTable = :idTable\")\r\n    LiveData<List<Product>> getProductByIdTableLiveData(String idTable);\r\n\r\n    @Delete\r\n    void deleteProduct(Product product);\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/poly/restaurant/data/db/dao/ProductDao.java b/app/src/main/java/com/poly/restaurant/data/db/dao/ProductDao.java
--- a/app/src/main/java/com/poly/restaurant/data/db/dao/ProductDao.java	(revision 0a0186a71dc296c156595856ed5b19b2c0d67d76)
+++ b/app/src/main/java/com/poly/restaurant/data/db/dao/ProductDao.java	(date 1671964757831)
@@ -29,6 +29,9 @@
     @Query("UPDATE Product SET amount = :amount WHERE id = :id AND idTable = :idTable")
     void updateAmount(int amount, String id, String idTable);
 
+    @Query("DELETE FROM Product WHERE id = :id AND idTable = :idTable")
+    void deleteProduct(String id, String idTable);
+
     @Query("SELECT id FROM Product WHERE id = :id AND idTable = :idTable")
     String findProductById(String id, String idTable);
 
Index: app/src/main/java/com/poly/restaurant/ui/activities/product/appetizer/AppetizerFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.poly.restaurant.ui.activities.product.appetizer;\r\n\r\nimport androidx.appcompat.widget.SearchView;\r\nimport androidx.lifecycle.MutableLiveData;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProvider;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.TextView;\r\n\r\nimport com.poly.restaurant.R;\r\nimport com.poly.restaurant.data.models.Bill;\r\nimport com.poly.restaurant.data.models.Product;\r\nimport com.poly.restaurant.databinding.FragmentAppetizerBinding;\r\nimport com.poly.restaurant.preference.AppSharePreference;\r\nimport com.poly.restaurant.ui.activities.product.FoodActivity;\r\nimport com.poly.restaurant.ui.activities.product.appetizer.adapter.IOnEventProductListener;\r\nimport com.poly.restaurant.ui.activities.product.appetizer.adapter.ProductAdapter;\r\nimport com.poly.restaurant.ui.base.BaseFragment;\r\nimport com.poly.restaurant.utils.Constants;\r\nimport com.poly.restaurant.utils.helps.ViewModelFactory;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\n\r\npublic class AppetizerFragment extends BaseFragment {\r\n    private FragmentAppetizerBinding binding;\r\n    private AppetizerViewModel mViewModel;\r\n    private ProductAdapter adapter;\r\n    private List<Product> mListAppetizer;\r\n    private AppSharePreference sharePreference;\r\n\r\n    public static AppetizerFragment newInstance() {\r\n        return new AppetizerFragment();\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container,\r\n                             @Nullable Bundle savedInstanceState) {\r\n        ViewModelFactory factory = new ViewModelFactory(getContext());\r\n        mViewModel = new ViewModelProvider(this, factory).get(AppetizerViewModel.class);\r\n        binding = FragmentAppetizerBinding.inflate(getLayoutInflater());\r\n        mListAppetizer = new ArrayList<>();\r\n        sharePreference = new AppSharePreference(getContext());\r\n        binding.prgLoadProduct.setVisibility(View.VISIBLE);\r\n        adapter = new ProductAdapter(mListAppetizer, new IOnEventProductListener() {\r\n            @Override\r\n            public void onClickIncrease(@NonNull Product product, TextView tvQuantity, int position) {\r\n                Constants.handleIncrease(tvQuantity, Constants.TYPE_IN_PRODUCT);\r\n                int quantity = Integer.parseInt(tvQuantity.getText().toString().subSequence(1, tvQuantity.getText().toString().length()).toString());\r\n                handleAddProduct(product, quantity);\r\n                adapter.getMListProduct().get(position).setAmount(quantity);\r\n            }\r\n\r\n            @Override\r\n            public void onClickDecrease(@NonNull Product product, TextView tvQuantity, int position) {\r\n                Constants.handleDecrease(tvQuantity, Constants.TYPE_IN_PRODUCT);\r\n                int quantity = Integer.parseInt(tvQuantity.getText().toString().subSequence(1, tvQuantity.getText().toString().length()).toString());\r\n                handleDecreaseProduct(product, quantity);\r\n                adapter.getMListProduct().get(position).setAmount(quantity);\r\n            }\r\n\r\n            @Override\r\n            public void onClickViewItem(@NonNull Product product) {\r\n\r\n            }\r\n        });\r\n        binding.rvAppetizer.setLayoutManager(new LinearLayoutManager(getContext()));\r\n        binding.rvAppetizer.setAdapter(adapter);\r\n        mViewModel.mListAppetizerLiveData.observe(getViewLifecycleOwner(), new Observer<List<Product>>() {\r\n            @Override\r\n            public void onChanged(List<Product> products) {\r\n                if (products != null){\r\n                    for (int i = 0; i < products.size(); i++){\r\n                        if (mViewModel.getListProduct().size() != 0){\r\n                            for (int j = 0; j < mViewModel.getListProductByIdTable(sharePreference.getTableId()).size(); j++){\r\n                                if (products.get(i).getId().equals(mViewModel.getListProductByIdTable(sharePreference.getTableId()).get(j).getId())){\r\n                                    products.set(i, mViewModel.getListProductByIdTable(sharePreference.getTableId()).get(j));\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    mListAppetizer = products;\r\n                    adapter.setList(products);\r\n                    binding.prgLoadProduct.setVisibility(View.GONE);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        mViewModel.mBillLiveData.observe(getViewLifecycleOwner(), new Observer<Bill>() {\r\n            @Override\r\n            public void onChanged(Bill bill) {\r\n                String date = new SimpleDateFormat(\"dd/MM/yyyy\", Locale.getDefault()).format(Calendar.getInstance().getTime());\r\n                String time = new SimpleDateFormat(\"hh:mm\", Locale.getDefault()).format(Calendar.getInstance().getTime());\r\n                if (bill == null){\r\n//                    mViewModel.callToCreateBill(new Bill(null, date, time, ));\r\n                }\r\n            }\r\n        });\r\n\r\n        eventScrollRecycleView();\r\n        mViewModel.callToGetAppetizer();\r\n\r\n        initListener();\r\n        return binding.getRoot();\r\n    }\r\n\r\n\r\n    private void eventScrollRecycleView() {\r\n        int height = ((FoodActivity) requireActivity()).findViewById(R.id.view_bottom_sheet).getHeight();\r\n        binding.rvAppetizer.setPadding(0, 0, 0, height);\r\n        binding.rvAppetizer.addOnScrollListener(new RecyclerView.OnScrollListener() {\r\n            @Override\r\n            public void onScrollStateChanged(@NonNull RecyclerView recyclerView, int newState) {\r\n                if (newState == 0){\r\n                    ((FoodActivity) requireActivity()).isScrollingLiveData.postValue(false);\r\n                }else{\r\n                    ((FoodActivity) requireActivity()).isScrollingLiveData.postValue(true);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void handleDecreaseProduct(Product product, int quantity) {\r\n        if (mViewModel.getProductById(product.getId(), sharePreference.getTableId()) != null){\r\n            if (quantity == 0){\r\n                mViewModel.deleteProduct(product);\r\n            }\r\n            mViewModel.updateProduct(new Product(\r\n                    product.getIdProduct(),\r\n                    product.getId(), product.getName(), product.getUrlImage(), product.getPrice(), product.getTotal(), quantity,\r\n                    product.getType(),\r\n                    product.getIdCategory(),\r\n                    sharePreference.getTableId()\r\n            ));\r\n\r\n        }\r\n    }\r\n\r\n    private void handleAddProduct(Product product, int quantity) {\r\n        if (mViewModel.getProductById(product.getId(), sharePreference.getTableId()) == null){\r\n            mViewModel.insertProduct(new Product(\r\n                    null,\r\n                    product.getId(), product.getName(), product.getUrlImage(), product.getPrice(), product.getTotal(),\r\n                    quantity,\r\n                    product.getType(),\r\n                    product.getIdCategory(),\r\n                    sharePreference.getTableId()\r\n            ));\r\n        }else{\r\n            mViewModel.updateAmountProduct(quantity, product.getId(), sharePreference.getTableId());\r\n        }\r\n    }\r\n\r\n    private void initListener() {\r\n        SearchView searchView = ((FoodActivity) getActivity()).findViewById(R.id.sv_food);\r\n        searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\r\n            @Override\r\n            public boolean onQueryTextSubmit(String query) {\r\n                return false;\r\n            }\r\n\r\n            @Override\r\n            public boolean onQueryTextChange(String newText) {\r\n                Constants.filterList(newText, mListAppetizer, adapter);\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onResume() {\r\n        initListener();\r\n//        adapter.setList(mViewModel.getListProductByIdTable(sharePreference.getTableId()));\r\n        super.onResume();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/poly/restaurant/ui/activities/product/appetizer/AppetizerFragment.java b/app/src/main/java/com/poly/restaurant/ui/activities/product/appetizer/AppetizerFragment.java
--- a/app/src/main/java/com/poly/restaurant/ui/activities/product/appetizer/AppetizerFragment.java	(revision 0a0186a71dc296c156595856ed5b19b2c0d67d76)
+++ b/app/src/main/java/com/poly/restaurant/ui/activities/product/appetizer/AppetizerFragment.java	(date 1671965109516)
@@ -13,11 +13,14 @@
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.TextView;
+import android.widget.Toast;
 
+import com.google.gson.Gson;
 import com.poly.restaurant.R;
 import com.poly.restaurant.data.models.Bill;
 import com.poly.restaurant.data.models.Product;
@@ -61,16 +64,24 @@
             public void onClickIncrease(@NonNull Product product, TextView tvQuantity, int position) {
                 Constants.handleIncrease(tvQuantity, Constants.TYPE_IN_PRODUCT);
                 int quantity = Integer.parseInt(tvQuantity.getText().toString().subSequence(1, tvQuantity.getText().toString().length()).toString());
-                handleAddProduct(product, quantity);
-                adapter.getMListProduct().get(position).setAmount(quantity);
+                if (quantity <= product.getTotal()){
+                    handleAddProduct(product, quantity);
+                    tvQuantity.setText("x" + quantity);
+                    adapter.getMListProduct().get(position).setAmount(quantity);
+                }else{
+                    Toast.makeText(requireContext(), "Không được vượt quá sản lượng", Toast.LENGTH_SHORT).show();
+                }
             }
 
             @Override
             public void onClickDecrease(@NonNull Product product, TextView tvQuantity, int position) {
-                Constants.handleDecrease(tvQuantity, Constants.TYPE_IN_PRODUCT);
                 int quantity = Integer.parseInt(tvQuantity.getText().toString().subSequence(1, tvQuantity.getText().toString().length()).toString());
-                handleDecreaseProduct(product, quantity);
-                adapter.getMListProduct().get(position).setAmount(quantity);
+                if (quantity > 0){
+                    quantity --;
+                    tvQuantity.setText("x"+quantity);
+                    handleDecreaseProduct(product, quantity);
+                    adapter.getMListProduct().get(position).setAmount(quantity);
+                }
             }
 
             @Override
@@ -138,16 +149,10 @@
     private void handleDecreaseProduct(Product product, int quantity) {
         if (mViewModel.getProductById(product.getId(), sharePreference.getTableId()) != null){
             if (quantity == 0){
-                mViewModel.deleteProduct(product);
+                mViewModel.deleteProduct(product.getId(), sharePreference.getTableId());
+            }else{
+                mViewModel.updateAmountProduct(quantity, product.getId(), sharePreference.getTableId());
             }
-            mViewModel.updateProduct(new Product(
-                    product.getIdProduct(),
-                    product.getId(), product.getName(), product.getUrlImage(), product.getPrice(), product.getTotal(), quantity,
-                    product.getType(),
-                    product.getIdCategory(),
-                    sharePreference.getTableId()
-            ));
-
         }
     }
 
Index: app/src/main/java/com/poly/restaurant/ui/activities/product/main/MainDishesFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.poly.restaurant.ui.activities.product.main;\r\n\r\nimport androidx.appcompat.widget.SearchView;\r\nimport androidx.lifecycle.MutableLiveData;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProvider;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.TextView;\r\n\r\nimport com.poly.restaurant.R;\r\nimport com.poly.restaurant.data.models.Product;\r\nimport com.poly.restaurant.databinding.FragmentMainDishesBinding;\r\nimport com.poly.restaurant.preference.AppSharePreference;\r\nimport com.poly.restaurant.ui.activities.product.FoodActivity;\r\nimport com.poly.restaurant.ui.activities.product.appetizer.adapter.IOnEventProductListener;\r\nimport com.poly.restaurant.ui.activities.product.appetizer.adapter.ProductAdapter;\r\nimport com.poly.restaurant.ui.base.BaseFragment;\r\nimport com.poly.restaurant.utils.Constants;\r\nimport com.poly.restaurant.utils.helps.ViewModelFactory;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class MainDishesFragment extends BaseFragment {\r\n\r\n    private FragmentMainDishesBinding binding;\r\n    private MainDishesViewModel mViewModel;\r\n    private ProductAdapter adapter;\r\n    private List<Product> mListMainDishes;\r\n    private AppSharePreference sharePreference;\r\n\r\n    public static MainDishesFragment newInstance() {\r\n        return new MainDishesFragment();\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container,\r\n                             @Nullable Bundle savedInstanceState) {\r\n        ViewModelFactory factory = new ViewModelFactory(getContext());\r\n        mViewModel = new ViewModelProvider(this, factory).get(MainDishesViewModel.class);\r\n        binding = FragmentMainDishesBinding.inflate(getLayoutInflater());\r\n        sharePreference = new AppSharePreference(getContext());\r\n        binding.prgLoadProduct.setVisibility(View.VISIBLE);\r\n        mListMainDishes = new ArrayList<>();\r\n        adapter = new ProductAdapter(mListMainDishes, new IOnEventProductListener() {\r\n            @Override\r\n            public void onClickIncrease(@NonNull Product product, @NonNull TextView tvQuantity, int position) {\r\n                Constants.handleIncrease(tvQuantity, Constants.TYPE_IN_PRODUCT);\r\n                int quantity = Integer.parseInt(tvQuantity.getText().toString().subSequence(1, tvQuantity.getText().toString().length()).toString());\r\n                handleAddProduct(product, quantity);\r\n                adapter.getMListProduct().get(position).setAmount(quantity);\r\n            }\r\n\r\n            @Override\r\n            public void onClickDecrease(@NonNull Product product, @NonNull TextView tvQuantity, int position) {\r\n                Constants.handleDecrease(tvQuantity, Constants.TYPE_IN_PRODUCT);\r\n                int quantity = Integer.parseInt(tvQuantity.getText().toString().subSequence(1, tvQuantity.getText().toString().length()).toString());\r\n                handleDecreaseProduct(product, quantity);\r\n                adapter.getMListProduct().get(position).setAmount(quantity);\r\n            }\r\n\r\n            @Override\r\n            public void onClickViewItem(@NonNull Product product) {\r\n\r\n            }\r\n        });\r\n        binding.rvMainDishes.setLayoutManager(new LinearLayoutManager(getContext()));\r\n        binding.rvMainDishes.setAdapter(adapter);\r\n        mViewModel.mListProductLiveData.observe(getViewLifecycleOwner(), new Observer<List<Product>>() {\r\n            @Override\r\n            public void onChanged(List<Product> products) {\r\n                if (products != null){\r\n                    for (int i = 0; i < products.size(); i++){\r\n                        if (mViewModel.getListProduct().size() != 0){\r\n                            for (int j = 0; j < mViewModel.getListProductByIdTable(sharePreference.getTableId()).size(); j++){\r\n                                if (products.get(i).getId().equals(mViewModel.getListProductByIdTable(sharePreference.getTableId()).get(j).getId())){\r\n                                    products.set(i, mViewModel.getListProductByIdTable(sharePreference.getTableId()).get(j));\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    mListMainDishes = products;\r\n                    adapter.setList(products);\r\n                    binding.prgLoadProduct.setVisibility(View.GONE);\r\n                }\r\n            }\r\n        });\r\n\r\n        initListener();\r\n        eventScrollRecycleView();\r\n        mViewModel.callToGetDrink();\r\n        return binding.getRoot();\r\n    }\r\n\r\n    private void handleDecreaseProduct(Product product, int quantity) {\r\n        if (mViewModel.getProductById(product.getId(), sharePreference.getTableId()) != null){\r\n            if (quantity == 0){\r\n                mViewModel.deleteProduct(product);\r\n            }\r\n            mViewModel.updateProduct(new Product(\r\n                    product.getIdProduct(),\r\n                    product.getId(), product.getName(), product.getUrlImage(), product.getPrice(), product.getTotal(), quantity,\r\n                    product.getType(),\r\n                    product.getIdCategory(),\r\n                    sharePreference.getTableId()\r\n            ));\r\n\r\n        }\r\n    }\r\n\r\n    private void eventScrollRecycleView() {\r\n        int height = ((FoodActivity) requireActivity()).findViewById(R.id.view_bottom_sheet).getHeight();\r\n        binding.rvMainDishes.setPadding(0, 0, 0, height);\r\n        binding.rvMainDishes.addOnScrollListener(new RecyclerView.OnScrollListener() {\r\n            @Override\r\n            public void onScrollStateChanged(@NonNull RecyclerView recyclerView, int newState) {\r\n                if (newState == 0){\r\n                    ((FoodActivity) requireActivity()).isScrollingLiveData.postValue(false);\r\n                }else{\r\n                    ((FoodActivity) requireActivity()).isScrollingLiveData.postValue(true);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void handleAddProduct(Product product, int quantity) {\r\n        if (mViewModel.getProductById(product.getId(), sharePreference.getTableId()) == null){\r\n            mViewModel.insertProduct(new Product(null,\r\n                    product.getId(), product.getName(), product.getUrlImage(), product.getPrice(), product.getTotal(), quantity,\r\n                    product.getType(),\r\n                    product.getIdCategory(),\r\n                    sharePreference.getTableId()\r\n            ));\r\n        }else{\r\n            mViewModel.updateAmountProduct(quantity, product.getId(), sharePreference.getTableId());\r\n        }\r\n    }\r\n\r\n    private void initListener() {\r\n        SearchView searchView = ((FoodActivity) getActivity()).findViewById(R.id.sv_food);\r\n        searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\r\n            @Override\r\n            public boolean onQueryTextSubmit(String query) {\r\n                return false;\r\n            }\r\n\r\n            @Override\r\n            public boolean onQueryTextChange(String newText) {\r\n                Constants.filterList(newText, mListMainDishes, adapter);\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onResume() {\r\n        initListener();\r\n//        adapter.setList(mViewModel.getListProductByIdTable(sharePreference.getTableId()));\r\n        super.onResume();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/poly/restaurant/ui/activities/product/main/MainDishesFragment.java b/app/src/main/java/com/poly/restaurant/ui/activities/product/main/MainDishesFragment.java
--- a/app/src/main/java/com/poly/restaurant/ui/activities/product/main/MainDishesFragment.java	(revision 0a0186a71dc296c156595856ed5b19b2c0d67d76)
+++ b/app/src/main/java/com/poly/restaurant/ui/activities/product/main/MainDishesFragment.java	(date 1671965664096)
@@ -18,6 +18,7 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.TextView;
+import android.widget.Toast;
 
 import com.poly.restaurant.R;
 import com.poly.restaurant.data.models.Product;
@@ -57,18 +58,26 @@
         adapter = new ProductAdapter(mListMainDishes, new IOnEventProductListener() {
             @Override
             public void onClickIncrease(@NonNull Product product, @NonNull TextView tvQuantity, int position) {
-                Constants.handleIncrease(tvQuantity, Constants.TYPE_IN_PRODUCT);
                 int quantity = Integer.parseInt(tvQuantity.getText().toString().subSequence(1, tvQuantity.getText().toString().length()).toString());
-                handleAddProduct(product, quantity);
-                adapter.getMListProduct().get(position).setAmount(quantity);
+                if (quantity < product.getTotal()){
+                    Constants.handleIncrease(tvQuantity, Constants.TYPE_IN_PRODUCT);
+                    handleAddProduct(product, quantity);
+                    adapter.getMListProduct().get(position).setAmount(quantity);
+                }else{
+                    Toast.makeText(requireContext(), "Không được vượt quá sản lượng", Toast.LENGTH_SHORT).show();
+                }
+
             }
 
             @Override
             public void onClickDecrease(@NonNull Product product, @NonNull TextView tvQuantity, int position) {
-                Constants.handleDecrease(tvQuantity, Constants.TYPE_IN_PRODUCT);
                 int quantity = Integer.parseInt(tvQuantity.getText().toString().subSequence(1, tvQuantity.getText().toString().length()).toString());
-                handleDecreaseProduct(product, quantity);
-                adapter.getMListProduct().get(position).setAmount(quantity);
+                if (quantity > 0){
+                    quantity --;
+                    tvQuantity.setText("x"+quantity);
+                    handleDecreaseProduct(product, quantity);
+                    adapter.getMListProduct().get(position).setAmount(quantity);
+                }
             }
 
             @Override
@@ -107,16 +116,10 @@
     private void handleDecreaseProduct(Product product, int quantity) {
         if (mViewModel.getProductById(product.getId(), sharePreference.getTableId()) != null){
             if (quantity == 0){
-                mViewModel.deleteProduct(product);
+                mViewModel.deleteProduct(product.getId(), sharePreference.getTableId());
+            }else{
+                mViewModel.updateAmountProduct(quantity, product.getId(), sharePreference.getTableId());
             }
-            mViewModel.updateProduct(new Product(
-                    product.getIdProduct(),
-                    product.getId(), product.getName(), product.getUrlImage(), product.getPrice(), product.getTotal(), quantity,
-                    product.getType(),
-                    product.getIdCategory(),
-                    sharePreference.getTableId()
-            ));
-
         }
     }
 
Index: app/src/main/java/com/poly/restaurant/ui/activities/product/drinks/DrinksFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.poly.restaurant.ui.activities.product.drinks;\r\n\r\nimport androidx.appcompat.widget.SearchView;\r\nimport androidx.lifecycle.MutableLiveData;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProvider;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.TextView;\r\n\r\nimport com.poly.restaurant.R;\r\nimport com.poly.restaurant.data.models.Product;\r\nimport com.poly.restaurant.databinding.FragmentDrinksBinding;\r\nimport com.poly.restaurant.preference.AppSharePreference;\r\nimport com.poly.restaurant.ui.activities.product.FoodActivity;\r\nimport com.poly.restaurant.ui.activities.product.appetizer.adapter.IOnEventProductListener;\r\nimport com.poly.restaurant.ui.activities.product.appetizer.adapter.ProductAdapter;\r\nimport com.poly.restaurant.ui.base.BaseFragment;\r\nimport com.poly.restaurant.utils.Constants;\r\nimport com.poly.restaurant.utils.helps.ViewModelFactory;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class DrinksFragment extends BaseFragment {\r\n    private FragmentDrinksBinding binding;\r\n    private DrinksViewModel mViewModel;\r\n    private ProductAdapter adapter;\r\n    private List<Product> mListProduct;\r\n    private AppSharePreference sharePreference;\r\n\r\n    public static DrinksFragment newInstance() {\r\n        return new DrinksFragment();\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container,\r\n                             @Nullable Bundle savedInstanceState) {\r\n        ViewModelFactory factory = new ViewModelFactory(getContext());\r\n        mViewModel = new ViewModelProvider(this, factory).get(DrinksViewModel.class);\r\n        binding = FragmentDrinksBinding.inflate(getLayoutInflater());\r\n        initView();\r\n        initListener();\r\n\r\n        return binding.getRoot();\r\n    }\r\n\r\n    private void initView() {\r\n        binding.prgLoadProduct.setVisibility(View.VISIBLE);\r\n        mListProduct = new ArrayList<>();\r\n        sharePreference = new AppSharePreference(getContext());\r\n        adapter = new ProductAdapter(mListProduct, new IOnEventProductListener() {\r\n            @Override\r\n            public void onClickIncrease(@NonNull Product product, TextView tvQuantity, int position) {\r\n                Constants.handleIncrease(tvQuantity, Constants.TYPE_IN_PRODUCT);\r\n                int quantity = Integer.parseInt(tvQuantity.getText().toString().subSequence(1, tvQuantity.getText().toString().length()).toString());\r\n                handleAddProduct(product, quantity);\r\n                adapter.getMListProduct().get(position).setAmount(quantity);\r\n            }\r\n\r\n            @Override\r\n            public void onClickDecrease(@NonNull Product product, TextView tvQuantity, int position) {\r\n                Constants.handleDecrease(tvQuantity, Constants.TYPE_IN_PRODUCT);\r\n                int quantity = Integer.parseInt(tvQuantity.getText().toString().subSequence(1, tvQuantity.getText().toString().length()).toString());\r\n                handleDecreaseProduct(product, quantity);\r\n                adapter.getMListProduct().get(position).setAmount(quantity);\r\n            }\r\n\r\n            @Override\r\n            public void onClickViewItem(@NonNull Product product) {\r\n\r\n            }\r\n        });\r\n        binding.rvDrinks.setLayoutManager(new LinearLayoutManager(getContext()));\r\n        binding.rvDrinks.setAdapter(adapter);\r\n        mViewModel.mListDrinkLiveData.observe(getViewLifecycleOwner(), new Observer<List<Product>>() {\r\n            @Override\r\n            public void onChanged(List<Product> products) {\r\n                if (products != null){\r\n                    for (int i = 0; i < products.size(); i++){\r\n                        if (mViewModel.getListProductByIdTable(sharePreference.getTableId()).size() != 0){\r\n                            for (int j = 0; j < mViewModel.getListProductByIdTable(sharePreference.getTableId()).size(); j++){\r\n                                if (products.get(i).getId().equals(mViewModel.getListProductByIdTable(sharePreference.getTableId()).get(j).getId())){\r\n                                    products.set(i, mViewModel.getListProductByIdTable(sharePreference.getTableId()).get(j));\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    mListProduct = products;\r\n                    adapter.setList(products);\r\n                    binding.prgLoadProduct.setVisibility(View.GONE);\r\n                }\r\n            }\r\n        });\r\n        eventScrollRecycleView();\r\n        mViewModel.callToGetDrink();\r\n    }\r\n\r\n    private void eventScrollRecycleView() {\r\n        int height = requireActivity().findViewById(R.id.view_bottom_sheet).getHeight();\r\n        binding.rvDrinks.setPadding(0, 0, 0, height);\r\n        binding.rvDrinks.addOnScrollListener(new RecyclerView.OnScrollListener() {\r\n            @Override\r\n            public void onScrollStateChanged(@NonNull RecyclerView recyclerView, int newState) {\r\n                if (newState == 0){\r\n                    ((FoodActivity) requireActivity()).isScrollingLiveData.postValue(false);\r\n                }else{\r\n                    ((FoodActivity) requireActivity()).isScrollingLiveData.postValue(true);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void handleDecreaseProduct(Product product, int quantity) {\r\n        if (mViewModel.getProductById(product.getId(), sharePreference.getTableId()) != null){\r\n            if (quantity == 0){\r\n                mViewModel.deleteProduct(product);\r\n            }\r\n            mViewModel.updateProduct(new Product(\r\n                    product.getIdProduct(),\r\n                    product.getId(),\r\n                    product.getName(),\r\n                    product.getUrlImage(),\r\n                    product.getPrice(),\r\n                    product.getTotal(),\r\n                    quantity,\r\n                    product.getType(),\r\n                    product.getIdCategory(),\r\n                    sharePreference.getTableId()\r\n            ));\r\n        }\r\n    }\r\n\r\n    private void handleAddProduct(Product product, int quantity) {\r\n        if (mViewModel.getProductById(product.getId(), sharePreference.getTableId()) == null){\r\n            mViewModel.insertProduct(new Product(\r\n                    null,\r\n                    product.getId(),\r\n                    product.getName(),\r\n                    product.getUrlImage(),\r\n                    product.getPrice(),\r\n                    product.getTotal(),\r\n                    quantity,\r\n                    product.getType(),\r\n                    product.getIdCategory(),\r\n                    sharePreference.getTableId()\r\n            ));\r\n        }else{\r\n            mViewModel.updateAmountProduct(quantity, product.getId(), sharePreference.getTableId());\r\n        }\r\n    }\r\n\r\n    private void initListener() {\r\n        SearchView searchView = ((FoodActivity) getActivity()).findViewById(R.id.sv_food);\r\n        searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\r\n            @Override\r\n            public boolean onQueryTextSubmit(String query) {\r\n                return false;\r\n            }\r\n\r\n            @Override\r\n            public boolean onQueryTextChange(String newText) {\r\n                Constants.filterList(newText, mListProduct, adapter);\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onResume() {\r\n        initListener();\r\n//        adapter.setList(mViewModel.getListProductByIdTable(sharePreference.getTableId()));\r\n        super.onResume();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/poly/restaurant/ui/activities/product/drinks/DrinksFragment.java b/app/src/main/java/com/poly/restaurant/ui/activities/product/drinks/DrinksFragment.java
--- a/app/src/main/java/com/poly/restaurant/ui/activities/product/drinks/DrinksFragment.java	(revision 0a0186a71dc296c156595856ed5b19b2c0d67d76)
+++ b/app/src/main/java/com/poly/restaurant/ui/activities/product/drinks/DrinksFragment.java	(date 1671965664081)
@@ -17,6 +17,7 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.TextView;
+import android.widget.Toast;
 
 import com.poly.restaurant.R;
 import com.poly.restaurant.data.models.Product;
@@ -62,18 +63,25 @@
         adapter = new ProductAdapter(mListProduct, new IOnEventProductListener() {
             @Override
             public void onClickIncrease(@NonNull Product product, TextView tvQuantity, int position) {
-                Constants.handleIncrease(tvQuantity, Constants.TYPE_IN_PRODUCT);
                 int quantity = Integer.parseInt(tvQuantity.getText().toString().subSequence(1, tvQuantity.getText().toString().length()).toString());
-                handleAddProduct(product, quantity);
-                adapter.getMListProduct().get(position).setAmount(quantity);
+                if (quantity < product.getTotal()){
+                    Constants.handleIncrease(tvQuantity, Constants.TYPE_IN_PRODUCT);
+                    handleAddProduct(product, quantity);
+                    adapter.getMListProduct().get(position).setAmount(quantity);
+                }else{
+                    Toast.makeText(requireContext(), "Không được vượt quá sản lượng", Toast.LENGTH_SHORT).show();
+                }
             }
 
             @Override
             public void onClickDecrease(@NonNull Product product, TextView tvQuantity, int position) {
-                Constants.handleDecrease(tvQuantity, Constants.TYPE_IN_PRODUCT);
                 int quantity = Integer.parseInt(tvQuantity.getText().toString().subSequence(1, tvQuantity.getText().toString().length()).toString());
-                handleDecreaseProduct(product, quantity);
-                adapter.getMListProduct().get(position).setAmount(quantity);
+                if (quantity > 0){
+                    quantity --;
+                    tvQuantity.setText("x"+quantity);
+                    handleDecreaseProduct(product, quantity);
+                    adapter.getMListProduct().get(position).setAmount(quantity);
+                }
             }
 
             @Override
@@ -124,20 +132,10 @@
     private void handleDecreaseProduct(Product product, int quantity) {
         if (mViewModel.getProductById(product.getId(), sharePreference.getTableId()) != null){
             if (quantity == 0){
-                mViewModel.deleteProduct(product);
+                mViewModel.deleteProduct(product.getId(), sharePreference.getTableId());
+            }else{
+                mViewModel.updateAmountProduct(quantity, product.getId(), sharePreference.getTableId());
             }
-            mViewModel.updateProduct(new Product(
-                    product.getIdProduct(),
-                    product.getId(),
-                    product.getName(),
-                    product.getUrlImage(),
-                    product.getPrice(),
-                    product.getTotal(),
-                    quantity,
-                    product.getType(),
-                    product.getIdCategory(),
-                    sharePreference.getTableId()
-            ));
         }
     }
 
Index: app/src/main/java/com/poly/restaurant/ui/activities/table/TableDetailActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.poly.restaurant.ui.activities.table;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProvider;\r\nimport androidx.localbroadcastmanager.content.LocalBroadcastManager;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.BroadcastReceiver;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.IntentFilter;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.view.Window;\r\nimport android.view.animation.AnimationUtils;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.poly.restaurant.R;\r\nimport com.poly.restaurant.data.models.Bill;\r\nimport com.poly.restaurant.data.models.Notification;\r\nimport com.poly.restaurant.data.models.Product;\r\nimport com.poly.restaurant.data.models.Staff;\r\nimport com.poly.restaurant.data.models.Table;\r\nimport com.poly.restaurant.databinding.ActivityTableDetailBinding;\r\nimport com.poly.restaurant.preference.AppSharePreference;\r\nimport com.poly.restaurant.ui.dialog.DialogAnnounce;\r\nimport com.poly.restaurant.ui.activities.product.FoodActivity;\r\nimport com.poly.restaurant.ui.activities.table.adapter.IOnItemProductTableListener;\r\nimport com.poly.restaurant.ui.activities.table.adapter.ProductTableAdapter;\r\nimport com.poly.restaurant.ui.base.BaseActivity;\r\nimport com.poly.restaurant.ui.dialog.DialogRequest;\r\nimport com.poly.restaurant.ui.dialog.interfaces.IOnEventDialogListener;\r\nimport com.poly.restaurant.utils.Constants;\r\nimport com.poly.restaurant.utils.helps.ViewModelFactory;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\n\r\n@SuppressLint(\"SetTextI18n\")\r\npublic class TableDetailActivity extends BaseActivity {\r\n    private ActivityTableDetailBinding binding;\r\n    private TableDetailViewModel viewModel;\r\n    private List<Product> mListProduct;\r\n    private List<Staff> mListAdmin;\r\n    private List<Staff> mListChef;\r\n    private ProductTableAdapter adapter;\r\n    private AppSharePreference sharePreference;\r\n    private Table table;\r\n    private boolean isShowing = false;\r\n    private final int type = 0;\r\n    private double total = 0;\r\n    private int count = 0;\r\n    private int countCreate = 0;\r\n    private final String date = new SimpleDateFormat(\"dd/MM/yyyy\", Locale.getDefault()).format(Calendar.getInstance().getTime());\r\n    private final String time = new SimpleDateFormat(\"HH:mm:ss\", Locale.getDefault()).format(Calendar.getInstance().getTime());\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        ViewModelFactory factory = new ViewModelFactory(this);\r\n        viewModel = new ViewModelProvider(this, factory).get(TableDetailViewModel.class);\r\n        binding = ActivityTableDetailBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n        mListAdmin = getIntent().getParcelableArrayListExtra(Constants.EXTRA_ADMIN_TO_DETAIL);\r\n        mListChef = getIntent().getParcelableArrayListExtra(Constants.EXTRA_CHEF_TO_DETAIL);\r\n        Window window = getWindow();\r\n        window.setStatusBarColor(ContextCompat.getColor(this, R.color.status_bar_color));\r\n        mListProduct = new ArrayList();\r\n        sharePreference = new AppSharePreference(this);\r\n        table = getIntent().getParcelableExtra(Constants.EXTRA_TABLE_TO_DETAIL);\r\n        sharePreference.setTableId(table.getId());\r\n        binding.tvNameTable.setText(table.getName());\r\n        binding.imgDone.setVisibility(View.GONE);\r\n\r\n        LinearLayoutManager layoutManager = new LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false);\r\n        binding.rvFood.setLayoutManager(layoutManager);\r\n\r\n        adapter = new ProductTableAdapter(mListProduct, new IOnItemProductTableListener() {\r\n            @Override\r\n            public void onClickDelete(@NonNull Product product) {\r\n                viewModel.deleteProduct(product);\r\n            }\r\n\r\n            @Override\r\n            public void onClickDecrease(@NonNull Product product, @NonNull TextView tvQuantity, int position) {\r\n                Constants.handleDecrease(tvQuantity, Constants.TYPE_IN_TABLE);\r\n                int quantity = Integer.parseInt(tvQuantity.getText().toString().trim());\r\n                handleDecreaseProduct(product, quantity);\r\n                adapter.getMListProduct().get(position).setAmount(quantity);\r\n            }\r\n\r\n            @Override\r\n            public void onClickIncrease(@NonNull Product product, @NonNull TextView tvQuantity, int position) {\r\n                Constants.handleIncrease(tvQuantity, Constants.TYPE_IN_TABLE);\r\n                int quantity = Integer.parseInt(tvQuantity.getText().toString().trim());\r\n                handleAddProduct(product, quantity);\r\n                adapter.getMListProduct().get(position).setAmount(quantity);\r\n            }\r\n\r\n            @Override\r\n            public void onClickViewItem(@NonNull Product product) {\r\n\r\n            }\r\n        });\r\n\r\n        binding.rvFood.setAdapter(adapter);\r\n\r\n        eventScrollRecycleView();\r\n        initEvent();\r\n        initEventViewModel();\r\n\r\n        viewModel.checkBillAlreadyExists(table.getId());\r\n\r\n        if (!sharePreference.getTableId().equals(sharePreference.getBeforeTableId()) && viewModel.getListProductByIdTable(table.getId()).size() == 0){\r\n            viewModel.callToGetBillExist(sharePreference.getTableId(), Constants.TYPE_NON_CLICK);\r\n            sharePreference.setBeforeTableId(table.getId());\r\n        }\r\n\r\n        LocalBroadcastManager.getInstance(this).registerReceiver((receiver),\r\n                new IntentFilter(Constants.REQUEST_TO_ACTIVITY)\r\n        );\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        LocalBroadcastManager.getInstance(this).registerReceiver((receiver),\r\n                new IntentFilter(Constants.REQUEST_TO_ACTIVITY)\r\n        );\r\n        super.onResume();\r\n    }\r\n\r\n    private void initEventViewModel() {\r\n        viewModel.getListProductByIdTableLive(sharePreference.getTableId()).observe(this, new Observer<List<Product>>() {\r\n            @Override\r\n            public void onChanged(List<Product> products) {\r\n                if (products != null && products.size() != 0){\r\n                    if (!isShowing){\r\n                        visibleBottomSheet();\r\n                        isShowing = true;\r\n                    }\r\n                    total = 0;\r\n                    for (Product product : products) {\r\n                        total += Double.parseDouble((product.getPrice() * product.getAmount())+\"\");\r\n                    }\r\n                    binding.tvTotalDishes.setText(\"Total dishes: \"+products.size()+\" dishes\");\r\n                    binding.tvTotalPrice.setText(\"Total price: \"+total+\"$\");\r\n                    mListProduct = products;\r\n                    adapter.setList(products);\r\n                }else{\r\n                    isShowing = false;\r\n                    hideBottomSheet();\r\n                }\r\n                showOrHideView(products);\r\n            }\r\n        });\r\n\r\n        /**\r\n         * Bill has been create and push notification to chef and manager\r\n         * */\r\n        viewModel.wasBillCreated.observe(this, new Observer<Bill>() {\r\n            @Override\r\n            public void onChanged(Bill bill) {\r\n                if (bill != null){\r\n                    String title = \"Thông báo\";\r\n                    String content = \"Bill bàn \"+bill.getTable().getName()+\" đã được tạo. Hành động thôi nào :))\";\r\n                    for (Staff s: mListChef){\r\n                        countCreate++;\r\n                        viewModel.callToPushNotification(\r\n                                s.getTokenFCM(),\r\n                                title,\r\n                                content,\r\n                                bill.getId(),\r\n                                Constants.staff.getId()\r\n                        );\r\n                        viewModel.createNotification(new Notification(\r\n                                null, title, content, date, time, Constants.staff, s, bill.getId()\r\n                        ));\r\n                    }\r\n                    Table tableUpdate = new Table(table.getId(), table.getName(), table.getFloor(), table.getCapacity(), 1);\r\n                    viewModel.updateTable(table.getId(), tableUpdate);\r\n                    binding.btnOrder.setBackgroundResource(R.drawable.bg_btn_order_black);\r\n                    binding.tvStatus.setText(\"Đang giao cho nhà bếp xử lý\");\r\n                    DialogAnnounce.getInstance(\"Tạo hóa đơn thành công\").show(getSupportFragmentManager(), new DialogAnnounce().getTag());\r\n                }else{\r\n                    Toast.makeText(TableDetailActivity.this, \"Failed to create bill successfully\", Toast.LENGTH_SHORT).show();\r\n                }\r\n                binding.btnOrder.setEnabled(true);\r\n            }\r\n        });\r\n\r\n        /**\r\n         * If bill already exist, update it. If not, create it\r\n         * */\r\n        viewModel.mBillLiveData.observe(this, new Observer<List<Bill>>() {\r\n            @Override\r\n            public void onChanged(List<Bill> bill) {\r\n                if (bill != null && bill.size() != 0){\r\n                    if (mListProduct.size() != 0){\r\n                        /**\r\n                         * Update bill\r\n                         * */\r\n                        Table tableUpdate = new Table(table.getId(), table.getName(), table.getFloor(), table.getCapacity(), 1);\r\n                        viewModel.callToUpdateBill(bill.get(0).getId(), new Bill(bill.get(0).getId(), date, time, total, 0, 0, mListProduct,\r\n                                tableUpdate,\r\n                                null, Constants.staff), Constants.TYPE_UPDATE);\r\n                        String title = \"Thông báo bổ sung món\";\r\n                        String content = \"Bill bàn \"+bill.get(0).getTable().getName()+\" vừa bổ sung thêm món\";\r\n                        for (Staff s: mListChef){\r\n                            count++;\r\n                            viewModel.callToPushNotification(\r\n                                    s.getTokenFCM(),\r\n                                    title,\r\n                                    content,\r\n                                    bill.get(0).getId(),\r\n                                    Constants.staff.getId()\r\n                            );\r\n                            viewModel.createNotification(new Notification(\r\n                                    null, title, content, date, time, Constants.staff, s, bill.get(0).getId()\r\n                            ));\r\n                        }\r\n                        if (count == mListChef.size()){\r\n                            DialogAnnounce.getInstance(\"Đã gửi thực đơn cho nhà bếp\").show(getSupportFragmentManager(), new DialogAnnounce().getTag());\r\n                            count = 0;\r\n                        }\r\n                        binding.tvStatus.setText(\"Đang giao cho nhà bếp xử lý\");\r\n                    }else{\r\n                        Toast.makeText(TableDetailActivity.this, \"No products\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }else{\r\n                    /**\r\n                    * Create bill\r\n                    * */\r\n                    Table tableUpdate = new Table(table.getId(), table.getName(), table.getFloor(), table.getCapacity(), 1);\r\n                    viewModel.callToCreateBill(new Bill(null, date, time, total, 0, 0, mListProduct, tableUpdate, null, Constants.staff));\r\n                    binding.btnOrder.setBackgroundResource(R.drawable.bg_btn_order);\r\n                    binding.imgDone.setVisibility(View.VISIBLE);\r\n                    binding.btnOrder.setText(\"Order\");\r\n                }\r\n            }\r\n        });\r\n\r\n        /**\r\n        * Was updated bill successfully\r\n        * */\r\n        viewModel.wasUpdated.observe(this, new Observer<Boolean>() {\r\n            @Override\r\n            public void onChanged(Boolean wasUpdated) {\r\n                if (wasUpdated){\r\n//                    Toast.makeText(TableDetailActivity.this, \"Updated\", Toast.LENGTH_SHORT).show();\r\n                }else{\r\n                    Toast.makeText(TableDetailActivity.this, \"Failed to update\", Toast.LENGTH_SHORT).show();\r\n                }\r\n\r\n                binding.btnOrder.setEnabled(true);\r\n            }\r\n        });\r\n\r\n        /**\r\n         * If bill has been created before and now show it to user\r\n         * */\r\n        viewModel.mBilExist.observe(this, new Observer<List<Bill>>() {\r\n            @Override\r\n            public void onChanged(List<Bill> bills) {\r\n                if ((bills != null ? bills.size() : 0) != 0){\r\n                    binding.imgDone.setVisibility(View.VISIBLE);\r\n                    setStatusTable(bills.get(0));\r\n                    for (Product product: bills.get(0).getProducts()){\r\n                        viewModel.insertProduct(new Product(\r\n                                null,\r\n                                product.getId(), product.getName(), product.getUrlImage(), product.getPrice(), product.getTotal(), product.getAmount(),\r\n                                product.getType(),\r\n                                product.getIdCategory(),\r\n                                sharePreference.getTableId()\r\n                        ));\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        viewModel.mBillByIdLiveData.observe(this, new Observer<Bill>() {\r\n            @Override\r\n            public void onChanged(Bill bill) {\r\n                if (bill != null){\r\n                    setStatusTable(bill);\r\n                }\r\n            }\r\n        });\r\n\r\n        /**\r\n         * Live data to pay bill\r\n         * */\r\n        viewModel.payBillLiveData.observe(this, new Observer<List<Bill>>() {\r\n            @Override\r\n            public void onChanged(List<Bill> bills) {\r\n                if (bills != null && bills.size() != 0){\r\n                    Table tableUpdate = new Table(table.getId(), table.getName(), table.getFloor(), table.getCapacity(), 1);\r\n                    viewModel.callToUpdateBill(bills.get(0).getId(), new Bill(bills.get(0).getId(), date, time, total, 0, 2, mListProduct,\r\n                            tableUpdate,\r\n                            null, Constants.staff), Constants.TYPE_PAY);\r\n                    String title = \"Thông báo xác nhận hóa đơn\";\r\n                    String content = \"Bàn \"+ bills.get(0).getTable().getName()+ \" đang chờ xác nhận thanh toán\";\r\n                    for (Staff s: mListAdmin){\r\n                        viewModel.callToPushNotification(\r\n                                s.getTokenFCM(),\r\n                                title,\r\n                                content,\r\n                                bills.get(0).getId(),\r\n                                Constants.staff.getId()\r\n                        );\r\n                        viewModel.createNotification(new Notification(\r\n                                null, title, content, date, time, Constants.staff, s, bills.get(0).getId()\r\n                        ));\r\n                    }\r\n                    DialogAnnounce.getInstance(\"Đã gửi xác nhận cho quản lý\").show(getSupportFragmentManager(), new DialogAnnounce().getTag());\r\n                    binding.tvStatus.setText(\"Đang chờ tiến hành thanh toán\");\r\n                }\r\n            }\r\n        });\r\n\r\n        viewModel.statusBillExistLiveData.observe(this, new Observer<List<Bill>>() {\r\n            @Override\r\n            public void onChanged(List<Bill> bills) {\r\n                if (bills != null && bills.size() != 0){\r\n                    setStatusTable(bills.get(0));\r\n                }else{\r\n                    for (Product product: viewModel.getListProductByIdTable(sharePreference.getTableId())){\r\n                        viewModel.deleteProduct(product);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void initEvent() {\r\n        binding.btnOrder.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                viewModel.callToGetBillExist(sharePreference.getTableId(), Constants.TYPE_CLICK);\r\n                binding.btnOrder.setEnabled(false);\r\n            }\r\n        });\r\n        binding.imgDone.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                new DialogRequest(new IOnEventDialogListener() {\r\n                    @Override\r\n                    public void onClickPositive() {\r\n                        viewModel.callToGetBillExist(sharePreference.getTableId(), Constants.TYPE_PAY_BILL);\r\n                        binding.btnOrder.setEnabled(false);\r\n                    }\r\n                }).show(getSupportFragmentManager(), new DialogAnnounce().getTag());\r\n            }\r\n        });\r\n    }\r\n\r\n    private void eventScrollRecycleView() {\r\n        binding.rvFood.addOnScrollListener(new RecyclerView.OnScrollListener() {\r\n            @Override\r\n            public void onScrollStateChanged(@NonNull RecyclerView recyclerView, int newState) {\r\n                if (newState == 0){\r\n                    visibleBottomSheet();\r\n                }else{\r\n                    hideBottomSheet();\r\n                }\r\n            }\r\n        });\r\n\r\n        binding.btnAdd.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                startActivity(new Intent(TableDetailActivity.this, FoodActivity.class));\r\n            }\r\n        });\r\n\r\n        binding.imgAdd.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                startActivity(new Intent(TableDetailActivity.this, FoodActivity.class));\r\n            }\r\n        });\r\n    }\r\n\r\n    private void showOrHideView(List<Product> products){\r\n        if (products == null || products.size() == 0){\r\n            binding.rvFood.setVisibility(View.GONE);\r\n            binding.viewNoneItem.setVisibility(View.VISIBLE);\r\n        }else{\r\n            binding.viewNoneItem.setVisibility(View.GONE);\r\n            binding.rvFood.setVisibility(View.VISIBLE);\r\n        }\r\n    }\r\n\r\n    private void handleDecreaseProduct(Product product, int quantity) {\r\n        if (viewModel.getProductById(product.getId(), sharePreference.getTableId()) != null){\r\n            if (quantity == 0){\r\n                viewModel.deleteProduct(product);\r\n            }\r\n            viewModel.updateProduct(new Product(\r\n                    product.getIdProduct(),\r\n                    product.getId(), product.getName(), product.getUrlImage(), product.getPrice(), product.getTotal(), quantity,\r\n                    product.getType(),\r\n                    product.getIdCategory(),\r\n                    sharePreference.getTableId()\r\n            ));\r\n        }\r\n    }\r\n\r\n    private void handleAddProduct(Product product, int quantity) {\r\n        if (viewModel.getProductById(product.getId(), sharePreference.getTableId()) == null){\r\n            viewModel.insertProduct(new Product(\r\n                    null,\r\n                    product.getId(), product.getName(), product.getUrlImage(), product.getPrice(), product.getTotal(), quantity,\r\n                    product.getType(),\r\n                    product.getIdCategory(),\r\n                    sharePreference.getTableId()\r\n            ));\r\n        }else{\r\n            viewModel.updateProduct(new Product(\r\n                    product.getIdProduct(),\r\n                    product.getId(), product.getName(), product.getUrlImage(), product.getPrice(), product.getTotal(), quantity,\r\n                    product.getType(),\r\n                    product.getIdCategory(),\r\n                    sharePreference.getTableId()\r\n            ));\r\n        }\r\n    }\r\n\r\n    private void visibleBottomSheet(){\r\n        binding.viewBottomSheet.setAnimation(AnimationUtils.loadAnimation(getApplicationContext(), R.anim.anim_bottom_to_top));\r\n        binding.viewBottomSheet.setVisibility(View.VISIBLE);\r\n    }\r\n\r\n    private void hideBottomSheet(){\r\n        binding.viewBottomSheet.setAnimation(AnimationUtils.loadAnimation(getApplicationContext(), R.anim.anim_top_to_bottom));\r\n        binding.viewBottomSheet.setVisibility(View.GONE);\r\n    }\r\n\r\n    private final BroadcastReceiver receiver = new BroadcastReceiver() {\r\n        @Override\r\n        public void onReceive(Context context, Intent intent) {\r\n            try {\r\n                String idBill = intent.getStringExtra(Constants.EXTRA_ID_BILL_TO_TABLE_DETAIL);\r\n                viewModel.getBillById(idBill);\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    };\r\n\r\n    @Override\r\n    protected void onStop() {\r\n        LocalBroadcastManager.getInstance(this).unregisterReceiver(receiver);\r\n        super.onStop();\r\n    }\r\n\r\n    private void setStatusTable(Bill bill){\r\n        if (bill != null){\r\n            if (bill.getStatus() == 0){\r\n                binding.btnOrder.setBackgroundResource(R.drawable.bg_btn_order_black);\r\n                binding.btnOrder.setText(\"Update\");\r\n                binding.tvStatus.setText(\"Đang giao cho nhà bếp xử lý\");\r\n                binding.imgDone.setVisibility(View.VISIBLE);\r\n            }else if(bill.getStatus() == 1){\r\n                binding.btnOrder.setBackgroundResource(R.drawable.bg_btn_order_black);\r\n                binding.btnOrder.setText(\"Update\");\r\n                binding.tvStatus.setText(\"Đồ ăn đã hoàn thành. Bàn đang hoạt động.\");\r\n                binding.imgDone.setVisibility(View.VISIBLE);\r\n            }else if (bill.getStatus() == 2){\r\n                binding.btnOrder.setBackgroundResource(R.drawable.bg_btn_order_black);\r\n                binding.btnOrder.setText(\"Update\");\r\n                binding.btnOrder.setEnabled(false);\r\n                binding.tvStatus.setText(\"Đang chờ tiến hành thanh toán\");\r\n                binding.imgDone.setVisibility(View.VISIBLE);\r\n            }else if(bill.getStatus() == 3){\r\n                binding.tvStatus.setText(\"Thanh toán thành công\");\r\n                for (Product product: viewModel.getListProductByIdTable(bill.getTable().getId())){\r\n                    viewModel.deleteProduct(product);\r\n                }\r\n                DialogAnnounce.getInstance(\"Hóa đơn đã được thanh toán!!\").show(getSupportFragmentManager(), new DialogAnnounce().getTag());\r\n                binding.btnOrder.setBackgroundResource(R.drawable.bg_btn_order);\r\n                binding.btnOrder.setText(\"Order\");\r\n                binding.imgDone.setVisibility(View.GONE);\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/poly/restaurant/ui/activities/table/TableDetailActivity.java b/app/src/main/java/com/poly/restaurant/ui/activities/table/TableDetailActivity.java
--- a/app/src/main/java/com/poly/restaurant/ui/activities/table/TableDetailActivity.java	(revision 0a0186a71dc296c156595856ed5b19b2c0d67d76)
+++ b/app/src/main/java/com/poly/restaurant/ui/activities/table/TableDetailActivity.java	(date 1671956484757)
@@ -91,18 +91,27 @@
 
             @Override
             public void onClickDecrease(@NonNull Product product, @NonNull TextView tvQuantity, int position) {
-                Constants.handleDecrease(tvQuantity, Constants.TYPE_IN_TABLE);
                 int quantity = Integer.parseInt(tvQuantity.getText().toString().trim());
-                handleDecreaseProduct(product, quantity);
-                adapter.getMListProduct().get(position).setAmount(quantity);
+                if (quantity > 0){
+                    quantity--;
+                    Constants.handleDecrease(tvQuantity, Constants.TYPE_IN_TABLE);
+                    handleDecreaseProduct(product, quantity);
+                    tvQuantity.setText(quantity + "");
+                    adapter.getMListProduct().get(position).setAmount(quantity);
+                }
             }
 
             @Override
             public void onClickIncrease(@NonNull Product product, @NonNull TextView tvQuantity, int position) {
-                Constants.handleIncrease(tvQuantity, Constants.TYPE_IN_TABLE);
                 int quantity = Integer.parseInt(tvQuantity.getText().toString().trim());
-                handleAddProduct(product, quantity);
-                adapter.getMListProduct().get(position).setAmount(quantity);
+                if (quantity < product.getTotal()){
+                    quantity++;
+                    handleAddProduct(product, quantity);
+                    tvQuantity.setText(quantity + "");
+                    adapter.getMListProduct().get(position).setAmount(quantity);
+                }else{
+                    Toast.makeText(TableDetailActivity.this, "Không được vượt quá sản lượng", Toast.LENGTH_SHORT).show();
+                }
             }
 
             @Override
@@ -301,6 +310,7 @@
         viewModel.payBillLiveData.observe(this, new Observer<List<Bill>>() {
             @Override
             public void onChanged(List<Bill> bills) {
+                binding.imgDone.setEnabled(true);
                 if (bills != null && bills.size() != 0){
                     Table tableUpdate = new Table(table.getId(), table.getName(), table.getFloor(), table.getCapacity(), 1);
                     viewModel.callToUpdateBill(bills.get(0).getId(), new Bill(bills.get(0).getId(), date, time, total, 0, 2, mListProduct,
@@ -355,7 +365,7 @@
                     @Override
                     public void onClickPositive() {
                         viewModel.callToGetBillExist(sharePreference.getTableId(), Constants.TYPE_PAY_BILL);
-                        binding.btnOrder.setEnabled(false);
+                        binding.imgDone.setEnabled(false);
                     }
                 }).show(getSupportFragmentManager(), new DialogAnnounce().getTag());
             }
Index: app/src/main/java/com/poly/restaurant/ui/base/BaseViewModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.poly.restaurant.ui.base;\r\n\r\nimport android.content.Context;\r\n\r\nimport androidx.lifecycle.LiveData;\r\nimport androidx.lifecycle.ViewModel;\r\n\r\nimport com.poly.restaurant.data.db.AppDatabase;\r\nimport com.poly.restaurant.data.db.dao.ProductDao;\r\nimport com.poly.restaurant.data.models.Product;\r\nimport com.poly.restaurant.utils.helps.AppExecutors;\r\n\r\nimport java.util.List;\r\n\r\npublic abstract class BaseViewModel extends ViewModel {\r\n    protected ProductDao productDao;\r\n    protected AppExecutors appExecutors;\r\n\r\n    protected BaseViewModel(Context context) {\r\n        productDao = AppDatabase.getInstance(context).productDao();\r\n        appExecutors = new AppExecutors();\r\n    }\r\n\r\n    public List<Product> getListProductByIdTable(String idTable){\r\n        return productDao.getProductByIdTable(idTable);\r\n    }\r\n\r\n    public LiveData<List<Product>> getLocalProductsLiveData(){\r\n        return productDao.getProducts();\r\n    }\r\n\r\n    public void insertProduct(Product product){\r\n        appExecutors.diskIO().execute(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                productDao.insertProduct(product);\r\n            }\r\n        });\r\n    }\r\n\r\n    public void updateProduct(Product product){\r\n        appExecutors.diskIO().execute(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                productDao.updateProduct(product);\r\n            }\r\n        });\r\n    }\r\n\r\n    public void updateAmountProduct(int amount, String id, String idTable){\r\n        appExecutors.diskIO().execute(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                productDao.updateAmount(amount, id, idTable);\r\n            }\r\n        });\r\n    }\r\n\r\n    public void deleteProduct(Product product){\r\n        appExecutors.diskIO().execute(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                productDao.deleteProduct(product);\r\n            }\r\n        });\r\n    }\r\n\r\n    public List<Product> getListProduct(){\r\n        return productDao.getListProducts();\r\n    }\r\n\r\n    public String getProductById(String id, String idTable){\r\n        return productDao.findProductById(id, idTable);\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/poly/restaurant/ui/base/BaseViewModel.java b/app/src/main/java/com/poly/restaurant/ui/base/BaseViewModel.java
--- a/app/src/main/java/com/poly/restaurant/ui/base/BaseViewModel.java	(revision 0a0186a71dc296c156595856ed5b19b2c0d67d76)
+++ b/app/src/main/java/com/poly/restaurant/ui/base/BaseViewModel.java	(date 1671964757847)
@@ -65,6 +65,15 @@
         });
     }
 
+    public void deleteProduct(String id, String idTable){
+        appExecutors.diskIO().execute(new Runnable() {
+            @Override
+            public void run() {
+                productDao.deleteProduct(id, idTable);
+            }
+        });
+    }
+
     public List<Product> getListProduct(){
         return productDao.getListProducts();
     }
Index: .idea/shelf/Uncommitted_changes_before_Update_at_18_12_2022_12_30_PM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_18_12_2022_12_30_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_18_12_2022_12_30_PM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_18_12_2022_12_30_PM__Changes_.xml	(revision 0a0186a71dc296c156595856ed5b19b2c0d67d76)
+++ /dev/null	(revision 0a0186a71dc296c156595856ed5b19b2c0d67d76)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_18_12_2022_12_30_PM_[Changes]" date="1671341405055" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_18_12_2022_12_30_PM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 18/12/2022 12:30 PM [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_18_12_2022_12_30_PM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_18_12_2022_12_30_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_18_12_2022_12_30_PM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_18_12_2022_12_30_PM_[Changes]/shelved.patch	(revision 0a0186a71dc296c156595856ed5b19b2c0d67d76)
+++ /dev/null	(revision 0a0186a71dc296c156595856ed5b19b2c0d67d76)
@@ -1,69 +0,0 @@
-Index: app/src/main/java/com/poly/restaurant/ui/activities/manage/TableManageViewModel.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.poly.restaurant.ui.activities.manage;\r\n\r\nimport android.util.Log;\r\n\r\nimport androidx.lifecycle.MutableLiveData;\r\nimport androidx.lifecycle.ViewModel;\r\n\r\nimport com.poly.restaurant.data.models.Table;\r\nimport com.poly.restaurant.data.retrofit.RetroInstance;\r\nimport com.poly.restaurant.data.retrofit.ServiceAPI;\r\n\r\nimport java.util.List;\r\n\r\nimport io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;\r\nimport io.reactivex.rxjava3.core.Observable;\r\nimport io.reactivex.rxjava3.schedulers.Schedulers;\r\n\r\npublic class TableManageViewModel extends ViewModel {\r\n    public MutableLiveData<List<Table>> mListTableLiveData;\r\n    public MutableLiveData<List<Table>> mListLiveTableLiveData;\r\n    public MutableLiveData<List<Table>> mListEmptyTableLiveData;\r\n\r\n    public TableManageViewModel() {\r\n        mListTableLiveData = new MutableLiveData<>();\r\n        mListLiveTableLiveData = new MutableLiveData<>();\r\n        mListEmptyTableLiveData = new MutableLiveData<>();\r\n    }\r\n\r\n    public void callToGetTable(int floor){\r\n        ServiceAPI serviceAPI = RetroInstance.getRetrofitInstance().create(ServiceAPI.class);\r\n        Observable<List<Table>> observable = serviceAPI.getTableByFloor(floor);\r\n        observable.subscribeOn(Schedulers.io())\r\n                .observeOn(AndroidSchedulers.mainThread())\r\n                .subscribe(this::onRetrieveTableListSuccess, this::onHandleError);\r\n    }\r\n\r\n    private void onRetrieveTableListSuccess(List<Table> tables){\r\n        mListTableLiveData.postValue(tables);\r\n    }\r\n\r\n    private void onHandleError(Throwable throwable){\r\n        Log.e(\"TAG\", \"handleErrors: \" + throwable.getMessage());\r\n    }\r\n\r\n    public void callToGetTableLive(int floor, int status){\r\n        ServiceAPI serviceAPI = RetroInstance.getRetrofitInstance().create(ServiceAPI.class);\r\n        Observable<List<Table>> observable = serviceAPI.getTableByFloorAndStatus(floor, status);\r\n        observable.subscribeOn(Schedulers.io())\r\n                .observeOn(AndroidSchedulers.mainThread())\r\n                .subscribe(this::onRetrieveTableLiveSuccess, this::onHandleErrorTableLive);\r\n    }\r\n\r\n    private void onRetrieveTableLiveSuccess(List<Table> tables){\r\n        mListLiveTableLiveData.postValue(tables);\r\n    }\r\n\r\n    private void onHandleErrorTableLive(Throwable throwable){\r\n        Log.e(\"TAG\", \"handle error live: \" + throwable.getMessage());\r\n        mListLiveTableLiveData.postValue(null);\r\n    }\r\n    public void callToGetTableEmpty(int floor, int status){\r\n        ServiceAPI serviceAPI = RetroInstance.getRetrofitInstance().create(ServiceAPI.class);\r\n        Observable<List<Table>> observable = serviceAPI.getTableByFloorAndStatus(floor, status);\r\n        observable.subscribeOn(Schedulers.io())\r\n                .observeOn(AndroidSchedulers.mainThread())\r\n                .subscribe(this::onRetrieveTableEmptySuccess, this::onHandleErrorTableEmpty);\r\n    }\r\n\r\n    private void onRetrieveTableEmptySuccess(List<Table> tables){\r\n        mListEmptyTableLiveData.postValue(tables);\r\n    }\r\n\r\n    private void onHandleErrorTableEmpty(Throwable throwable){\r\n        Log.e(\"TAG\", \"handle error empty: \" + throwable.getMessage());\r\n        mListEmptyTableLiveData.postValue(null);\r\n    }\r\n}\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/poly/restaurant/ui/activities/manage/TableManageViewModel.java b/app/src/main/java/com/poly/restaurant/ui/activities/manage/TableManageViewModel.java
---- a/app/src/main/java/com/poly/restaurant/ui/activities/manage/TableManageViewModel.java	(revision 172ba8f60bd9ad365ced347fef5b53961a531648)
-+++ b/app/src/main/java/com/poly/restaurant/ui/activities/manage/TableManageViewModel.java	(date 1671341391198)
-@@ -5,6 +5,7 @@
- import androidx.lifecycle.MutableLiveData;
- import androidx.lifecycle.ViewModel;
- 
-+import com.poly.restaurant.data.models.Staff;
- import com.poly.restaurant.data.models.Table;
- import com.poly.restaurant.data.retrofit.RetroInstance;
- import com.poly.restaurant.data.retrofit.ServiceAPI;
-@@ -14,6 +15,7 @@
- import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;
- import io.reactivex.rxjava3.core.Observable;
- import io.reactivex.rxjava3.schedulers.Schedulers;
-+import retrofit2.Response;
- 
- public class TableManageViewModel extends ViewModel {
-     public MutableLiveData<List<Table>> mListTableLiveData;
-@@ -74,5 +76,22 @@
-         Log.e("TAG", "handle error empty: " + throwable.getMessage());
-         mListEmptyTableLiveData.postValue(null);
-     }
-+
-+//    public void callToGetStaffByRole(int role){
-+//        ServiceAPI serviceAPI = RetroInstance.getRetrofitInstance().create(ServiceAPI.class);
-+//        Observable<Response<List<Staff>>> observable = serviceAPI.getStaffByRole(role);
-+//        observable.subscribeOn(Schedulers.io())
-+//                .observeOn(AndroidSchedulers.mainThread())
-+//                .subscribe(this::onRetrieveTableEmptySuccess, this::onHandleErrorTableEmpty);
-+//    }
-+//
-+//    private void onRetrieveStaff(List<Table> tables){
-+//        mListEmptyTableLiveData.postValue(tables);
-+//    }
-+//
-+//    private void onHandleStaff(Throwable throwable){
-+//        Log.e("TAG", "handle error empty: " + throwable.getMessage());
-+//        mListEmptyTableLiveData.postValue(null);
-+//    }
- }
- 
-Index: app/src/main/java/com/poly/restaurant/data/retrofit/ServiceAPI.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.poly.restaurant.data.retrofit;\r\n\r\nimport com.poly.restaurant.data.models.Bill;\r\nimport com.poly.restaurant.data.models.BodyDate;\r\nimport com.poly.restaurant.data.models.Notification;\r\nimport com.poly.restaurant.data.models.Product;\r\nimport com.poly.restaurant.data.models.Staff;\r\nimport com.poly.restaurant.data.models.Table;\r\n\r\nimport java.util.List;\r\n\r\nimport io.reactivex.rxjava3.core.Observable;\r\nimport retrofit2.Call;\r\nimport retrofit2.Response;\r\nimport retrofit2.http.Body;\r\nimport retrofit2.http.Field;\r\nimport retrofit2.http.FormUrlEncoded;\r\nimport retrofit2.http.GET;\r\nimport retrofit2.http.POST;\r\nimport retrofit2.http.PUT;\r\nimport retrofit2.http.Path;\r\nimport retrofit2.http.Query;\r\n\r\npublic interface ServiceAPI {\r\n\r\n    // Get table by floor\r\n    @GET(\"table/all/{floor}\")\r\n    Observable<List<Table>> getTableByFloor(\r\n            @Path(\"floor\") int floor\r\n    );\r\n\r\n    // Get table by floor and status\r\n    @GET(\"table\")\r\n    Observable<List<Table>> getTableByFloorAndStatus(\r\n            @Query(\"floor\") int floor,\r\n            @Query(\"status\") int status\r\n    );\r\n\r\n    // Get list product by category\r\n    @GET(\"products/all/{category}\")\r\n    Observable<List<Product>> getProductByCategory(\r\n            @Path(\"category\") int category\r\n    );\r\n\r\n    // Create a bill\r\n    @POST(\"bill/create\")\r\n    Observable<Bill> createBill(\r\n            @Body Bill bill\r\n    );\r\n\r\n    // Get list bill by table\r\n    @GET(\"bill/{idTable}\")\r\n    Observable<Bill> getBillByTable(\r\n            @Path(\"idTable\") String idTable\r\n    );\r\n\r\n    // Get list product in bill\r\n    @GET(\"bill/{idTable}/product\")\r\n    Observable<List<Product>> getListProductInBill(\r\n            @Path(\"idTable\") String idTable\r\n    );\r\n\r\n    // Check bill exist\r\n    @GET(\"bill/{idTable}/check\")\r\n    Observable<List<Bill>> getBillIfExists(\r\n            @Path(\"idTable\") String idTable\r\n    );\r\n\r\n    // Check bill exist\r\n    @PUT(\"bill/update/{id}\")\r\n    Observable<Bill> updateBillById(\r\n            @Path(\"id\") String id,\r\n            @Body Bill bill,\r\n            @Query(\"_method\") String method\r\n    );\r\n\r\n    // login\r\n    @FormUrlEncoded\r\n    @POST(\"staff/login\")\r\n    Observable<Staff> login(\r\n            @Field(\"account\") String account,\r\n            @Field(\"password\") String password,\r\n            @Field(\"tokenFCM\") String tokenFCM\r\n    );\r\n\r\n    // update status in bill\r\n    @PUT(\"bill/update/{id}\")\r\n    Call<List<Bill>> doneBill(\r\n            @Path(\"id\") String id,\r\n            @Query(\"_method\") String method,\r\n            @Body Bill bill\r\n    );\r\n\r\n    // get List Bill in status\r\n    @GET(\"bill/all/{status}\")\r\n    Call<List<Bill>> getTypeBill(@Path(\"status\") int status);\r\n\r\n    // filter history in firstDate and secondDate\r\n    @POST(\"bill/filter/{idTable}\")\r\n    Call<List<Bill>> getBillByDate(\r\n            @Path(\"idTable\") String idTable,\r\n            @Body BodyDate bodyDate\r\n    );\r\n\r\n\r\n    // change Password staff\r\n    @PUT(\"staff/update/{id}\")\r\n    Call<List<Staff>> changePassword(\r\n            @Path(\"id\") String id,\r\n            @Query(\"_method\") String method,\r\n            @Body Staff staff\r\n    );\r\n\r\n    // push notification\r\n    @POST(\"notification/create\")\r\n    Call<Notification> pushNotification(\r\n            @Field(\"title\") String title,\r\n            @Field(\"content\") String content,\r\n            @Field(\"date\") String date,\r\n            @Field(\"time\") String time,\r\n            @Field(\"sender\") Staff staffSender,\r\n            @Field(\"receiver\") Staff staffReceiver\r\n    );\r\n\r\n    // get list notification\r\n    @GET(\"notification/{idStaff}\")\r\n    Call<List<Notification>> getNotification(\r\n            @Path(\"idStaff\") String idStaff\r\n    );\r\n\r\n    // get notification\r\n    @FormUrlEncoded\r\n    @POST(\"bill/notify\")\r\n    Observable<Bill> pushNotificationToStaff(\r\n            @Field(\"tokenFCM\") String token,\r\n            @Field(\"title\") String title,\r\n            @Field(\"content\") String content,\r\n            @Field(\"idBill\") String idBill\r\n    );\r\n\r\n    // update table\r\n    @PUT(\"table/update/{idTable}\")\r\n    Observable<Table> updateTable(\r\n            @Path(\"idTable\") String idTable,\r\n            @Body Table table,\r\n            @Query(\"_method\") String method\r\n    );\r\n\r\n    // update table\r\n    @GET(\"bill\")\r\n    Observable<Response<Bill>> getBillById(\r\n            @Query(\"id\") String id\r\n    );\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/poly/restaurant/data/retrofit/ServiceAPI.java b/app/src/main/java/com/poly/restaurant/data/retrofit/ServiceAPI.java
---- a/app/src/main/java/com/poly/restaurant/data/retrofit/ServiceAPI.java	(revision 172ba8f60bd9ad365ced347fef5b53961a531648)
-+++ b/app/src/main/java/com/poly/restaurant/data/retrofit/ServiceAPI.java	(date 1671341396161)
-@@ -152,4 +152,9 @@
-             @Query("id") String id
-     );
- 
-+//    @GET("staff")
-+//    Observable<Response<List<Staff>>> getStaffByRole(
-+//            @Query("role") int role
-+//    );
-+
- }
Index: app/src/main/java/com/poly/restaurant/ui/activities/splash/SplashActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.poly.restaurant.ui.activities.splash;\r\n\r\nimport android.app.NotificationChannel;\r\nimport android.app.NotificationManager;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.google.firebase.messaging.FirebaseMessaging;\r\nimport com.google.gson.Gson;\r\nimport com.poly.restaurant.databinding.ActivitySplashBinding;\r\nimport com.poly.restaurant.ui.activities.login.LoginActivity;\r\nimport com.poly.restaurant.utils.Constants;\r\n\r\npublic class SplashActivity extends AppCompatActivity {\r\n    private ActivitySplashBinding binding;\r\n    private FirebaseMessaging fcm;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding = ActivitySplashBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n\r\n        new Handler().postDelayed(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                Intent intent = new Intent(SplashActivity.this, LoginActivity.class);\r\n                startActivity(intent);\r\n                finish();\r\n            }\r\n        }, 4000);\r\n\r\n\r\n        fcm = FirebaseMessaging.getInstance();\r\n        createChannelNotification();\r\n        Log.d(\"token\", new Gson().toJson(fcm.getToken()));\r\n    }\r\n\r\n    public void createChannelNotification() {\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\r\n            int importance = NotificationManager.IMPORTANCE_HIGH;\r\n            NotificationChannel channel = new NotificationChannel(\r\n                    Constants.CHANNEL_ID,\r\n                    \"Restaurant Channel\",\r\n                    importance\r\n            );\r\n            NotificationManager manager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);\r\n            manager.createNotificationChannel(channel);\r\n        }\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/poly/restaurant/ui/activities/splash/SplashActivity.java b/app/src/main/java/com/poly/restaurant/ui/activities/splash/SplashActivity.java
--- a/app/src/main/java/com/poly/restaurant/ui/activities/splash/SplashActivity.java	(revision 0a0186a71dc296c156595856ed5b19b2c0d67d76)
+++ b/app/src/main/java/com/poly/restaurant/ui/activities/splash/SplashActivity.java	(date 1671935619295)
@@ -34,7 +34,7 @@
                 startActivity(intent);
                 finish();
             }
-        }, 4000);
+        }, 2000);
 
 
         fcm = FirebaseMessaging.getInstance();
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/DATN/RestaurantManagement/app/src/main/res/layout/fragment_add_food.xml\" value=\"0.259375\" />\r\n        <entry key=\"..\\:/DATN/RestaurantManagement/app/src/main/res/layout/fragment_login.xml\" value=\"0.259375\" />\r\n        <entry key=\"..\\:/DATN/RestaurantManagement/app/src/main/res/layout/fragment_splash_screen.xml\" value=\"0.259375\" />\r\n        <entry key=\"..\\:/DATN/RestaurantManagement/app/src/main/res/layout/fragment_table.xml\" value=\"0.259375\" />\r\n        <entry key=\"..\\:/DATN/RestaurantManagement/app/src/main/res/layout/fragment_table_manager.xml\" value=\"0.259375\" />\r\n        <entry key=\"..\\:/DATN/RestaurantManagement/app/src/main/res/layout/item_table.xml\" value=\"0.259375\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/drawable/bg_btn_add.xml\" value=\"0.2225\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/drawable/bg_btn_order.xml\" value=\"0.28\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/drawable/bg_button_announce.xml\" value=\"0.2155\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/drawable/bg_dialog_alert_complete.xml\" value=\"0.2165\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/drawable/bg_dialog_text_alert.xml\" value=\"0.2165\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/drawable/bg_popup_spinner.xml\" value=\"0.268\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/drawable/bg_quantity.xml\" value=\"0.2825\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/drawable/btn_decrease_product.xml\" value=\"0.2225\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/drawable/btn_increase_product.xml\" value=\"0.2225\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/drawable/ic_icon_add.xml\" value=\"0.2225\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/drawable/ic_pay_bill.xml\" value=\"0.2325\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/drawable/progress_custom_circle.xml\" value=\"0.2225\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/activity_add_product.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/activity_bill.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/activity_detail_product.xml\" value=\"0.2765625\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/activity_detail_table_selected.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/activity_food.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/activity_history.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/activity_login.xml\" value=\"0.24895833333333334\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/activity_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/activity_notification.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/activity_splash.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/activity_table_detail.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/activity_table_manage.xml\" value=\"0.23505434782608695\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/activity_verify.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/dialog_alert_complete.xml\" value=\"0.209375\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/dialog_announce.xml\" value=\"0.20833333333333334\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/dialog_change_pass.xml\" value=\"0.18795289855072464\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/dialog_filter.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/dialog_request.xml\" value=\"0.24791666666666667\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/fragment_appetizer.xml\" value=\"0.3605072463768116\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/fragment_dessert.xml\" value=\"0.3605072463768116\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/fragment_drinks.xml\" value=\"0.3605072463768116\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/fragment_main_dishes.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/item_design.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/item_detail_product.xml\" value=\"0.2755208333333333\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/item_noti.xml\" value=\"0.24791666666666667\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/item_product.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/item_product_table.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/PC/AndroidStudioProjects/MyApplication/app/src/main/res/layout/activity_main.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/PC/AndroidStudioProjects/MyApplication/app/src/main/res/layout/activity_table_manage.xml\" value=\"0.14492753623188406\" />\r\n        <entry key=\"..\\:/Users/PC/AndroidStudioProjects/MyApplication/app/src/main/res/layout/fragment_drinks.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/PC/AndroidStudioProjects/MyApplication/app/src/main/res/layout/fragment_main_dishes.xml\" value=\"0.14492753623188406\" />\r\n        <entry key=\"..\\:/Users/PC/Desktop/DATN/RestaurantManagement/app/src/main/res/layout/activity_table_detail.xml\" value=\"0.176\" />\r\n        <entry key=\"..\\:/Users/PC/Desktop/DATN/RestaurantManagement/app/src/main/res/layout/activity_table_manage.xml\" value=\"0.15260416666666668\" />\r\n        <entry key=\"..\\:/abc/RestaurantManagement/app/src/main/res/layout/activity_account.xml\" value=\"0.259375\" />\r\n        <entry key=\"..\\:/abc/RestaurantManagement/app/src/main/res/layout/activity_bill.xml\" value=\"0.259375\" />\r\n        <entry key=\"..\\:/abc/RestaurantManagement/app/src/main/res/layout/activity_history.xml\" value=\"0.259375\" />\r\n        <entry key=\"..\\:/abc/RestaurantManagement/app/src/main/res/layout/activity_login.xml\" value=\"0.259375\" />\r\n        <entry key=\"..\\:/abc/RestaurantManagement/app/src/main/res/layout/activity_notification.xml\" value=\"0.259375\" />\r\n        <entry key=\"..\\:/abc/RestaurantManagement/app/src/main/res/layout/dialog_alert_complete.xml\" value=\"0.259375\" />\r\n        <entry key=\"..\\:/abc/RestaurantManagement/app/src/main/res/layout/dialog_change_pass.xml\" value=\"0.259375\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 0a0186a71dc296c156595856ed5b19b2c0d67d76)
+++ b/.idea/misc.xml	(date 1671936617883)
@@ -54,6 +54,7 @@
         <entry key="..\:/Users/PC/AndroidStudioProjects/MyApplication/app/src/main/res/layout/fragment_main_dishes.xml" value="0.14492753623188406" />
         <entry key="..\:/Users/PC/Desktop/DATN/RestaurantManagement/app/src/main/res/layout/activity_table_detail.xml" value="0.176" />
         <entry key="..\:/Users/PC/Desktop/DATN/RestaurantManagement/app/src/main/res/layout/activity_table_manage.xml" value="0.15260416666666668" />
+        <entry key="..\:/Users/PC/Desktop/DATN/RestaurantManagement/app/src/main/res/layout/item_product.xml" value="0.152" />
         <entry key="..\:/abc/RestaurantManagement/app/src/main/res/layout/activity_account.xml" value="0.259375" />
         <entry key="..\:/abc/RestaurantManagement/app/src/main/res/layout/activity_bill.xml" value="0.259375" />
         <entry key="..\:/abc/RestaurantManagement/app/src/main/res/layout/activity_history.xml" value="0.259375" />
Index: app/src/main/res/layout/item_product.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\r\n\r\n    <data>\r\n        <variable\r\n            name=\"product\"\r\n            type=\"com.poly.restaurant.data.models.Product\" />\r\n    </data>\r\n\r\n    <RelativeLayout\r\n        android:id=\"@+id/view_product\"\r\n        android:layout_marginTop=\"12dp\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        >\r\n\r\n        <FrameLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_alignBottom=\"@+id/view_image\"\r\n            >\r\n            <androidx.cardview.widget.CardView\r\n                android:id=\"@+id/view_content\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                app:cardCornerRadius=\"16dp\"\r\n                app:cardElevation=\"3dp\"\r\n                android:layout_margin=\"8dp\"\r\n                >\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:paddingBottom=\"3dp\"\r\n                    android:paddingTop=\"3dp\"\r\n                    >\r\n\r\n                    <View\r\n                        android:layout_width=\"176dp\"\r\n                        android:layout_height=\"1dp\"\r\n                        android:visibility=\"invisible\" />\r\n\r\n                    <LinearLayout\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_weight=\"1\"\r\n                        android:layout_gravity=\"center\"\r\n                        android:orientation=\"vertical\"\r\n                        android:paddingLeft=\"32dp\">\r\n\r\n                        <LinearLayout\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:orientation=\"horizontal\">\r\n\r\n                            <TextView\r\n                                style=\"@style/text_size_16sp_regular\"\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:text=\"Price  \"\r\n                                android:textColor=\"@color/black\" />\r\n\r\n                            <TextView\r\n                                android:id=\"@+id/tv_price\"\r\n                                style=\"@style/text_size_18sp_bold\"\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:padding=\"4dp\"\r\n                                android:text=\"150$  \"\r\n                                android:textColor=\"#DC0909\"\r\n                                android:textStyle=\"bold\" />\r\n                        </LinearLayout>\r\n\r\n                        <LinearLayout\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\">\r\n\r\n                            <TextView\r\n                                android:id=\"@+id/tv_description\"\r\n                                style=\"@style/text_size_16sp_regular\"\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:text=\"This is \\ndesciption  \"\r\n                                android:textColor=\"@color/black\"\r\n                                android:textStyle=\"bold\" />\r\n                        </LinearLayout>\r\n\r\n                    </LinearLayout>\r\n\r\n                    <LinearLayout\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginRight=\"10dp\"\r\n                        android:gravity=\"center\"\r\n                        android:orientation=\"vertical\"\r\n                        android:padding=\"10dp\">\r\n\r\n                        <ImageView\r\n                            android:id=\"@+id/img_increase\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:src=\"@drawable/btn_increase_product\" />\r\n\r\n                        <TextView\r\n                            android:id=\"@+id/tv_quantity\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_gravity=\"center\"\r\n                            android:layout_marginTop=\"6dp\"\r\n                            android:layout_marginBottom=\"6dp\"\r\n                            android:text=\"x0\" />\r\n\r\n                        <ImageView\r\n                            android:id=\"@+id/img_decrease\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:src=\"@drawable/btn_decrease_product\" />\r\n                    </LinearLayout>\r\n\r\n                </LinearLayout>\r\n            </androidx.cardview.widget.CardView>\r\n        </FrameLayout>\r\n\r\n        <LinearLayout\r\n            android:id=\"@+id/view_image\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"vertical\"\r\n            android:gravity=\"center\"\r\n            android:paddingLeft=\"16dp\">\r\n\r\n            <androidx.cardview.widget.CardView\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"-4dp\"\r\n                app:cardCornerRadius=\"16dp\"\r\n                android:elevation=\"4dp\"\r\n                android:layout_marginBottom=\"8dp\"\r\n                >\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/img_product\"\r\n                    android:layout_width=\"160dp\"\r\n                    android:layout_height=\"120dp\"\r\n                    android:adjustViewBounds=\"true\"\r\n                    android:elevation=\"8dp\"\r\n                    android:scaleType=\"centerCrop\"\r\n                    />\r\n            </androidx.cardview.widget.CardView>\r\n\r\n            <TextView\r\n                android:id=\"@+id/tv_name_product\"\r\n                style=\"@style/text_size_18sp_bold\"\r\n                android:layout_width=\"120dp\"\r\n                android:ellipsize=\"end\"\r\n                android:lines=\"1\"\r\n                android:padding=\"10dp\"\r\n                android:text=\"Capuchino\"\r\n                android:textColor=\"@color/black\"\r\n                android:textSize=\"20dp\"\r\n                android:textStyle=\"bold\"\r\n                android:layout_marginBottom=\"12dp\"\r\n                />\r\n        </LinearLayout>\r\n\r\n    </RelativeLayout>\r\n</layout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/item_product.xml b/app/src/main/res/layout/item_product.xml
--- a/app/src/main/res/layout/item_product.xml	(revision 0a0186a71dc296c156595856ed5b19b2c0d67d76)
+++ b/app/src/main/res/layout/item_product.xml	(date 1671936615624)
@@ -81,7 +81,6 @@
                                 style="@style/text_size_16sp_regular"
                                 android:layout_width="wrap_content"
                                 android:layout_height="wrap_content"
-                                android:text="This is \ndesciption  "
                                 android:textColor="@color/black"
                                 android:textStyle="bold" />
                         </LinearLayout>

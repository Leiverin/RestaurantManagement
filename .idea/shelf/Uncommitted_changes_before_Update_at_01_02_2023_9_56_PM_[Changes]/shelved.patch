Index: app/src/main/java/com/poly/restaurant/ui/activities/table/TableDetailActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.poly.restaurant.ui.activities.table;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProvider;\r\nimport androidx.localbroadcastmanager.content.LocalBroadcastManager;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.BroadcastReceiver;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.IntentFilter;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.view.Window;\r\nimport android.view.animation.AnimationUtils;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.poly.restaurant.R;\r\nimport com.poly.restaurant.data.models.Bill;\r\nimport com.poly.restaurant.data.models.Notification;\r\nimport com.poly.restaurant.data.models.Product;\r\nimport com.poly.restaurant.data.models.Staff;\r\nimport com.poly.restaurant.data.models.Table;\r\nimport com.poly.restaurant.databinding.ActivityTableDetailBinding;\r\nimport com.poly.restaurant.preference.AppSharePreference;\r\nimport com.poly.restaurant.ui.dialog.DialogAnnounce;\r\nimport com.poly.restaurant.ui.activities.product.FoodActivity;\r\nimport com.poly.restaurant.ui.activities.table.adapter.IOnItemProductTableListener;\r\nimport com.poly.restaurant.ui.activities.table.adapter.ProductTableAdapter;\r\nimport com.poly.restaurant.ui.base.BaseActivity;\r\nimport com.poly.restaurant.ui.dialog.DialogRequest;\r\nimport com.poly.restaurant.ui.dialog.interfaces.IOnEventDialogListener;\r\nimport com.poly.restaurant.utils.Constants;\r\nimport com.poly.restaurant.utils.helps.ViewModelFactory;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\n\r\n@SuppressLint(\"SetTextI18n\")\r\npublic class TableDetailActivity extends BaseActivity {\r\n    private ActivityTableDetailBinding binding;\r\n    private TableDetailViewModel viewModel;\r\n    private List<Product> mListProduct;\r\n    private List<Staff> mListAdmin;\r\n    private List<Staff> mListChef;\r\n    private List<Staff> mListCashier;\r\n    private ProductTableAdapter adapter;\r\n    private AppSharePreference sharePreference;\r\n    private Table table;\r\n    private boolean isShowing = false;\r\n    private final int type = 0;\r\n    private double total = 0;\r\n    private int count = 0;\r\n    private int countCreate = 0;\r\n    private final String date = new SimpleDateFormat(\"dd/MM/yyyy\", Locale.getDefault()).format(Calendar.getInstance().getTime());\r\n    private final String time = new SimpleDateFormat(\"HH:mm:ss\", Locale.getDefault()).format(Calendar.getInstance().getTime());\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        ViewModelFactory factory = new ViewModelFactory(this);\r\n        viewModel = new ViewModelProvider(this, factory).get(TableDetailViewModel.class);\r\n        binding = ActivityTableDetailBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n        mListAdmin = getIntent().getParcelableArrayListExtra(Constants.EXTRA_ADMIN_TO_DETAIL);\r\n        mListChef = getIntent().getParcelableArrayListExtra(Constants.EXTRA_CHEF_TO_DETAIL);\r\n        mListCashier = getIntent().getParcelableArrayListExtra(Constants.EXTRA_CASHIER_TO_DETAIL);\r\n        Window window = getWindow();\r\n        window.setStatusBarColor(ContextCompat.getColor(this, R.color.status_bar_color));\r\n        mListProduct = new ArrayList();\r\n        sharePreference = new AppSharePreference(this);\r\n        table = getIntent().getParcelableExtra(Constants.EXTRA_TABLE_TO_DETAIL);\r\n        sharePreference.setTableId(table.getId());\r\n        binding.tvNameTable.setText(table.getName());\r\n        binding.imgDone.setVisibility(View.GONE);\r\n\r\n        LinearLayoutManager layoutManager = new LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false);\r\n        binding.rvFood.setLayoutManager(layoutManager);\r\n\r\n        adapter = new ProductTableAdapter(mListProduct, new IOnItemProductTableListener() {\r\n            @Override\r\n            public void onClickDelete(@NonNull Product product) {\r\n                viewModel.deleteProduct(product);\r\n            }\r\n\r\n            @Override\r\n            public void onClickDecrease(@NonNull Product product, @NonNull TextView tvQuantity, int position) {\r\n                int quantity = Integer.parseInt(tvQuantity.getText().toString().trim());\r\n                if (quantity > 0){\r\n                    quantity--;\r\n                    Constants.handleDecrease(tvQuantity, Constants.TYPE_IN_TABLE);\r\n                    handleDecreaseProduct(product, quantity);\r\n                    tvQuantity.setText(quantity + \"\");\r\n                    adapter.getMListProduct().get(position).setAmount(quantity);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onClickIncrease(@NonNull Product product, @NonNull TextView tvQuantity, int position) {\r\n                int quantity = Integer.parseInt(tvQuantity.getText().toString().trim());\r\n                if (quantity < product.getTotal()){\r\n                    quantity++;\r\n                    handleAddProduct(product, quantity);\r\n                    tvQuantity.setText(quantity + \"\");\r\n                    adapter.getMListProduct().get(position).setAmount(quantity);\r\n                }else{\r\n                    Toast.makeText(TableDetailActivity.this, \"Không được vượt quá sản lượng\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onClickViewItem(@NonNull Product product) {\r\n\r\n            }\r\n        });\r\n\r\n        binding.rvFood.setAdapter(adapter);\r\n\r\n        eventScrollRecycleView();\r\n        initEvent();\r\n        initEventViewModel();\r\n\r\n        viewModel.checkBillAlreadyExists(table.getId());\r\n\r\n        if (!sharePreference.getTableId().equals(sharePreference.getBeforeTableId()) && viewModel.getListProductByIdTable(table.getId()).size() == 0){\r\n            viewModel.callToGetBillExist(sharePreference.getTableId(), Constants.TYPE_NON_CLICK);\r\n            sharePreference.setBeforeTableId(table.getId());\r\n        }\r\n\r\n        LocalBroadcastManager.getInstance(this).registerReceiver((receiver),\r\n                new IntentFilter(Constants.REQUEST_TO_ACTIVITY)\r\n        );\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        LocalBroadcastManager.getInstance(this).registerReceiver((receiver),\r\n                new IntentFilter(Constants.REQUEST_TO_ACTIVITY)\r\n        );\r\n        super.onResume();\r\n    }\r\n\r\n    private void initEventViewModel() {\r\n        viewModel.getListProductByIdTableLive(sharePreference.getTableId()).observe(this, new Observer<List<Product>>() {\r\n            @Override\r\n            public void onChanged(List<Product> products) {\r\n                if (products != null && products.size() != 0){\r\n                    if (!isShowing){\r\n                        visibleBottomSheet();\r\n                        isShowing = true;\r\n                    }\r\n                    total = 0;\r\n                    for (Product product : products) {\r\n                        total += Double.parseDouble((product.getPrice() * product.getAmount())+\"\");\r\n                    }\r\n                    binding.tvTotalDishes.setText(\"Tổng món: \"+products.size()+\" món\");\r\n                    binding.tvTotalPrice.setText(\"Tổng giá: \"+(int) (total*23000)+\"vnđ\");\r\n                    mListProduct = products;\r\n                    adapter.setList(products);\r\n                }else{\r\n                    isShowing = false;\r\n                    hideBottomSheet();\r\n                }\r\n                showOrHideView(products);\r\n            }\r\n        });\r\n\r\n        /**\r\n         * Bill has been create and push notification to chef and manager\r\n         * */\r\n        viewModel.wasBillCreated.observe(this, new Observer<Bill>() {\r\n            @Override\r\n            public void onChanged(Bill bill) {\r\n                if (bill != null){\r\n                    String title = \"Thông báo\";\r\n                    String content = \"Bill bàn \"+bill.getTable().getName()+\" đã được tạo. Hành động thôi nào :))\";\r\n                    for (Staff s: mListChef){\r\n                        countCreate++;\r\n                        viewModel.callToPushNotification(\r\n                                s.getTokenFCM(),\r\n                                title,\r\n                                content,\r\n                                bill.getId(),\r\n                                Constants.staff.getId()\r\n                        );\r\n                        viewModel.createNotification(new Notification(\r\n                                null, title, content, date, time, Constants.staff, s, bill.getId()\r\n                        ));\r\n                    }\r\n                    for (Staff s: mListAdmin){\r\n                        viewModel.callToPushNotification(\r\n                                s.getTokenFCM(),\r\n                                title,\r\n                                content,\r\n                                bill.getId(),\r\n                                Constants.staff.getId()\r\n                        );\r\n                        viewModel.createNotification(new Notification(\r\n                                null, title, content, date, time, Constants.staff, s, bill.getId()\r\n                        ));\r\n                    }\r\n                    for (Staff s: mListCashier){\r\n                        viewModel.callToPushNotification(\r\n                                s.getTokenFCM(),\r\n                                title,\r\n                                content,\r\n                                bill.getId(),\r\n                                Constants.staff.getId()\r\n                        );\r\n                        viewModel.createNotification(new Notification(\r\n                                null, title, content, date, time, Constants.staff, s, bill.getId()\r\n                        ));\r\n                    }\r\n                    Table tableUpdate = new Table(table.getId(), table.getName(), table.getFloor(), table.getCapacity(), 1);\r\n                    viewModel.updateTable(table.getId(), tableUpdate);\r\n                    binding.btnOrder.setBackgroundResource(R.drawable.bg_btn_order_black);\r\n                    binding.tvStatus.setText(\"Đang giao cho nhà bếp xử lý\");\r\n                    DialogAnnounce.getInstance(\"Tạo hóa đơn thành công\").show(getSupportFragmentManager(), new DialogAnnounce().getTag());\r\n                }else{\r\n                    Toast.makeText(TableDetailActivity.this, \"Failed to create bill successfully\", Toast.LENGTH_SHORT).show();\r\n                }\r\n                binding.btnOrder.setEnabled(true);\r\n            }\r\n        });\r\n\r\n        /**\r\n         * If bill already exist, update it. If not, create it\r\n         * */\r\n        viewModel.mBillLiveData.observe(this, new Observer<List<Bill>>() {\r\n            @Override\r\n            public void onChanged(List<Bill> bill) {\r\n                if (bill != null && bill.size() != 0){\r\n                    if (mListProduct.size() != 0){\r\n                        /**\r\n                         * Update bill\r\n                         * */\r\n                        Table tableUpdate = new Table(table.getId(), table.getName(), table.getFloor(), table.getCapacity(), 1);\r\n                        viewModel.callToUpdateBill(bill.get(0).getId(), new Bill(bill.get(0).getId(), date, time, total, 0, 0, mListProduct,\r\n                                tableUpdate, null, null, Constants.staff, null), Constants.TYPE_UPDATE);\r\n                        String title = \"Thông báo bổ sung món\";\r\n                        String content = \"Bill bàn \"+bill.get(0).getTable().getName()+\" vừa bổ sung thêm món\";\r\n                        for (Staff s: mListChef){\r\n                            count++;\r\n                            viewModel.callToPushNotification(\r\n                                    s.getTokenFCM(),\r\n                                    title,\r\n                                    content,\r\n                                    bill.get(0).getId(),\r\n                                    Constants.staff.getId()\r\n                            );\r\n                            viewModel.createNotification(new Notification(\r\n                                    null, title, content, date, time, Constants.staff, s, bill.get(0).getId()\r\n                            ));\r\n                        }\r\n                        if (count == mListChef.size()){\r\n                            DialogAnnounce.getInstance(\"Đã gửi thực đơn cho nhà bếp\").show(getSupportFragmentManager(), new DialogAnnounce().getTag());\r\n                            count = 0;\r\n                        }\r\n                        binding.tvStatus.setText(\"Đang giao cho nhà bếp xử lý\");\r\n                    }else{\r\n                        Toast.makeText(TableDetailActivity.this, \"Chưa có sản phẩm nào\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }else{\r\n                    /**\r\n                    * Create bill\r\n                    * */\r\n                    Table tableUpdate = new Table(table.getId(), table.getName(), table.getFloor(), table.getCapacity(), 1);\r\n                    viewModel.callToCreateBill(new Bill(null, date, time, total, 0, 0, mListProduct, tableUpdate, null, null, Constants.staff, null));\r\n                    binding.btnOrder.setBackgroundResource(R.drawable.bg_btn_order);\r\n                    binding.btnOrder.setText(\"Lên đơn\");\r\n                }\r\n            }\r\n        });\r\n\r\n        /**\r\n        * Was updated bill successfully\r\n        * */\r\n        viewModel.wasUpdated.observe(this, new Observer<Boolean>() {\r\n            @Override\r\n            public void onChanged(Boolean wasUpdated) {\r\n                if (wasUpdated){\r\n//                    Toast.makeText(TableDetailActivity.this, \"Updated\", Toast.LENGTH_SHORT).show();\r\n                }else{\r\n                    Toast.makeText(TableDetailActivity.this, \"Failed to update\", Toast.LENGTH_SHORT).show();\r\n                }\r\n\r\n                binding.btnOrder.setEnabled(true);\r\n            }\r\n        });\r\n\r\n        /**\r\n         * If bill has been created before and now show it to user\r\n         * */\r\n        viewModel.mBilExist.observe(this, new Observer<List<Bill>>() {\r\n            @Override\r\n            public void onChanged(List<Bill> bills) {\r\n                if ((bills != null ? bills.size() : 0) != 0){\r\n                    binding.imgDone.setVisibility(View.VISIBLE);\r\n                    setStatusTable(bills.get(0));\r\n                    for (Product product: bills.get(0).getProducts()){\r\n                        viewModel.insertProduct(new Product(\r\n                                null,\r\n                                product.getId(), product.getName(), product.getUrlImage(), product.getPrice(),\r\n                                product.getDescription(),\r\n                                product.getTotal(), product.getAmount(),\r\n                                product.getType(),\r\n                                product.getIdCategory(),\r\n                                sharePreference.getTableId(),\r\n                                product.getStatus()\r\n                        ));\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        viewModel.mBillByIdLiveData.observe(this, new Observer<Bill>() {\r\n            @Override\r\n            public void onChanged(Bill bill) {\r\n                if (bill != null){\r\n                    setStatusProduct(bill);\r\n                    setStatusTable(bill);\r\n                }\r\n            }\r\n        });\r\n\r\n        /**\r\n         * Live data to pay bill\r\n         * */\r\n        viewModel.payBillLiveData.observe(this, new Observer<List<Bill>>() {\r\n            @Override\r\n            public void onChanged(List<Bill> bills) {\r\n                binding.imgDone.setEnabled(true);\r\n                if (bills != null && bills.size() != 0){\r\n                    Table tableUpdate = new Table(table.getId(), table.getName(), table.getFloor(), table.getCapacity(), 1);\r\n                    viewModel.callToUpdateBill(bills.get(0).getId(), new Bill(bills.get(0).getId(), date, time, total, 0, 2, mListProduct,\r\n                            tableUpdate, null, null, Constants.staff, null), Constants.TYPE_PAY);\r\n                    String title = \"Thông báo xác nhận hóa đơn\";\r\n                    String content = \"Bàn \"+ bills.get(0).getTable().getName()+ \" đang chờ xác nhận thanh toán\";\r\n                    for (Staff s: mListAdmin){\r\n                        viewModel.callToPushNotification(\r\n                                s.getTokenFCM(),\r\n                                title,\r\n                                content,\r\n                                bills.get(0).getId(),\r\n                                Constants.staff.getId()\r\n                        );\r\n                        viewModel.createNotification(new Notification(\r\n                                null, title, content, date, time, Constants.staff, s, bills.get(0).getId()\r\n                        ));\r\n                    }\r\n                    for (Staff s: mListCashier){\r\n                        viewModel.callToPushNotification(\r\n                                s.getTokenFCM(),\r\n                                title,\r\n                                content,\r\n                                bills.get(0).getId(),\r\n                                Constants.staff.getId()\r\n                        );\r\n                        viewModel.createNotification(new Notification(\r\n                                null, title, content, date, time, Constants.staff, s, bills.get(0).getId()\r\n                        ));\r\n                    }\r\n                    DialogAnnounce.getInstance(\"Đã gửi xác nhận cho quản lý\").show(getSupportFragmentManager(), new DialogAnnounce().getTag());\r\n                    binding.tvStatus.setText(\"Đang chờ tiến hành thanh toán\");\r\n                }\r\n            }\r\n        });\r\n\r\n        viewModel.statusBillExistLiveData.observe(this, new Observer<List<Bill>>() {\r\n            @Override\r\n            public void onChanged(List<Bill> bills) {\r\n                if (bills != null && bills.size() != 0){\r\n                    setStatusTable(bills.get(0));\r\n                }else{\r\n                    for (Product product: viewModel.getListProductByIdTable(sharePreference.getTableId())){\r\n                        viewModel.deleteProduct(product);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void setStatusProduct(Bill bill) {\r\n        mListProduct = bill.getProducts();\r\n        for (Product product: bill.getProducts()){\r\n            viewModel.updateStatusProductInBill(product.getStatus(), product.getId(), product.getIdTable());\r\n        }\r\n        adapter.setList(mListProduct);\r\n    }\r\n\r\n    private void initEvent() {\r\n        binding.btnOrder.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                viewModel.callToGetBillExist(sharePreference.getTableId(), Constants.TYPE_CLICK);\r\n                binding.btnOrder.setEnabled(false);\r\n            }\r\n        });\r\n        binding.imgDone.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                new DialogRequest(new IOnEventDialogListener() {\r\n                    @Override\r\n                    public void onClickPositive() {\r\n                        viewModel.callToGetBillExist(sharePreference.getTableId(), Constants.TYPE_PAY_BILL);\r\n                        binding.imgDone.setEnabled(false);\r\n                    }\r\n                }).show(getSupportFragmentManager(), new DialogAnnounce().getTag());\r\n            }\r\n        });\r\n    }\r\n\r\n    private void eventScrollRecycleView() {\r\n        binding.rvFood.addOnScrollListener(new RecyclerView.OnScrollListener() {\r\n            @Override\r\n            public void onScrollStateChanged(@NonNull RecyclerView recyclerView, int newState) {\r\n                if (newState == 0){\r\n                    visibleBottomSheet();\r\n                }else{\r\n                    hideBottomSheet();\r\n                }\r\n            }\r\n        });\r\n\r\n        binding.btnAdd.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                startActivity(new Intent(TableDetailActivity.this, FoodActivity.class));\r\n            }\r\n        });\r\n\r\n        binding.imgAdd.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                startActivity(new Intent(TableDetailActivity.this, FoodActivity.class));\r\n            }\r\n        });\r\n    }\r\n\r\n    private void showOrHideView(List<Product> products){\r\n        if (products == null || products.size() == 0){\r\n            binding.rvFood.setVisibility(View.GONE);\r\n            binding.viewNoneItem.setVisibility(View.VISIBLE);\r\n        }else{\r\n            binding.viewNoneItem.setVisibility(View.GONE);\r\n            binding.rvFood.setVisibility(View.VISIBLE);\r\n        }\r\n    }\r\n\r\n    private void handleDecreaseProduct(Product product, int quantity) {\r\n        if (viewModel.getProductById(product.getId(), sharePreference.getTableId()) != null){\r\n            if (quantity == 0){\r\n                viewModel.deleteProduct(product);\r\n            }\r\n            viewModel.updateProduct(new Product(\r\n                    product.getIdProduct(),\r\n                    product.getId(), product.getName(), product.getUrlImage(), product.getPrice(),\r\n                    product.getDescription(),\r\n                    product.getTotal(), quantity,\r\n                    product.getType(),\r\n                    product.getIdCategory(),\r\n                    sharePreference.getTableId(),\r\n                    product.getStatus()\r\n            ));\r\n        }\r\n    }\r\n\r\n    private void handleAddProduct(Product product, int quantity) {\r\n        if (viewModel.getProductById(product.getId(), sharePreference.getTableId()) == null){\r\n            viewModel.insertProduct(new Product(\r\n                    null,\r\n                    product.getId(), product.getName(), product.getUrlImage(), product.getPrice(),\r\n                    product.getDescription(),\r\n                    product.getTotal(), quantity,\r\n                    product.getType(),\r\n                    product.getIdCategory(),\r\n                    sharePreference.getTableId(),\r\n                    product.getStatus()\r\n            ));\r\n        }else{\r\n            viewModel.updateProduct(new Product(\r\n                    product.getIdProduct(),\r\n                    product.getId(), product.getName(), product.getUrlImage(), product.getPrice(),\r\n                    product.getDescription(),\r\n                    product.getTotal(), quantity,\r\n                    product.getType(),\r\n                    product.getIdCategory(),\r\n                    sharePreference.getTableId(),\r\n                    product.getStatus()\r\n            ));\r\n        }\r\n    }\r\n\r\n    private void visibleBottomSheet(){\r\n        binding.viewBottomSheet.setAnimation(AnimationUtils.loadAnimation(getApplicationContext(), R.anim.anim_bottom_to_top));\r\n        binding.viewBottomSheet.setVisibility(View.VISIBLE);\r\n    }\r\n\r\n    private void hideBottomSheet(){\r\n        binding.viewBottomSheet.setAnimation(AnimationUtils.loadAnimation(getApplicationContext(), R.anim.anim_top_to_bottom));\r\n        binding.viewBottomSheet.setVisibility(View.GONE);\r\n    }\r\n\r\n    private final BroadcastReceiver receiver = new BroadcastReceiver() {\r\n        @Override\r\n        public void onReceive(Context context, Intent intent) {\r\n            try {\r\n                String idBill = intent.getStringExtra(Constants.EXTRA_ID_BILL_TO_TABLE_DETAIL);\r\n                viewModel.getBillById(idBill);\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    };\r\n\r\n    @Override\r\n    protected void onStop() {\r\n        LocalBroadcastManager.getInstance(this).unregisterReceiver(receiver);\r\n        super.onStop();\r\n    }\r\n\r\n    private void setStatusTable(Bill bill){\r\n        if (bill != null){\r\n            if (bill.getStatus() == 0){\r\n                binding.btnOrder.setBackgroundResource(R.drawable.bg_btn_order_black);\r\n                binding.btnOrder.setText(\"Cập nhật\");\r\n                binding.tvStatus.setText(\"Đang giao cho nhà bếp xử lý\");\r\n                binding.imgDone.setVisibility(View.GONE);\r\n            }else if(bill.getStatus() == 1){\r\n                binding.btnOrder.setBackgroundResource(R.drawable.bg_btn_order_black);\r\n                binding.btnOrder.setText(\"Cập nhật\");\r\n                binding.tvStatus.setText(\"Đồ ăn đã hoàn thành. Bàn đang hoạt động.\");\r\n                binding.imgDone.setVisibility(View.VISIBLE);\r\n            }else if (bill.getStatus() == 2){\r\n                binding.btnOrder.setBackgroundResource(R.drawable.bg_btn_order_black);\r\n                binding.btnOrder.setText(\"Cập nhật\");\r\n                binding.btnOrder.setEnabled(false);\r\n                binding.tvStatus.setText(\"Đang chờ tiến hành thanh toán\");\r\n                binding.imgDone.setVisibility(View.VISIBLE);\r\n            }else if(bill.getStatus() == 3){\r\n                binding.tvStatus.setText(\"Thanh toán thành công\");\r\n                for (Product product: viewModel.getListProductByIdTable(bill.getTable().getId())){\r\n                    viewModel.deleteProduct(product);\r\n                }\r\n                DialogAnnounce.getInstance(\"Hóa đơn đã được thanh toán!!\").show(getSupportFragmentManager(), new DialogAnnounce().getTag());\r\n                binding.btnOrder.setBackgroundResource(R.drawable.bg_btn_order);\r\n                binding.btnOrder.setText(\"Lên đơn\");\r\n                binding.imgDone.setVisibility(View.GONE);\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/poly/restaurant/ui/activities/table/TableDetailActivity.java b/app/src/main/java/com/poly/restaurant/ui/activities/table/TableDetailActivity.java
--- a/app/src/main/java/com/poly/restaurant/ui/activities/table/TableDetailActivity.java	(revision feb1c3cc2bc87d9e2b4b43fddac7c82bdb4d1c80)
+++ b/app/src/main/java/com/poly/restaurant/ui/activities/table/TableDetailActivity.java	(date 1674879478366)
@@ -224,6 +224,7 @@
                     viewModel.updateTable(table.getId(), tableUpdate);
                     binding.btnOrder.setBackgroundResource(R.drawable.bg_btn_order_black);
                     binding.tvStatus.setText("Đang giao cho nhà bếp xử lý");
+                    binding.btnOrder.setText("Update");
                     DialogAnnounce.getInstance("Tạo hóa đơn thành công").show(getSupportFragmentManager(), new DialogAnnounce().getTag());
                 }else{
                     Toast.makeText(TableDetailActivity.this, "Failed to create bill successfully", Toast.LENGTH_SHORT).show();
@@ -422,11 +423,11 @@
     private void eventScrollRecycleView() {
         binding.rvFood.addOnScrollListener(new RecyclerView.OnScrollListener() {
             @Override
-            public void onScrollStateChanged(@NonNull RecyclerView recyclerView, int newState) {
-                if (newState == 0){
-                    visibleBottomSheet();
-                }else{
+            public void onScrolled(@NonNull RecyclerView recyclerView, int dx, int dy) {
+                if (dy > 0){
                     hideBottomSheet();
+                }else{
+                    visibleBottomSheet();
                 }
             }
         });
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/DATN/RestaurantManagement/app/src/main/res/layout/fragment_add_food.xml\" value=\"0.259375\" />\r\n        <entry key=\"..\\:/DATN/RestaurantManagement/app/src/main/res/layout/fragment_login.xml\" value=\"0.259375\" />\r\n        <entry key=\"..\\:/DATN/RestaurantManagement/app/src/main/res/layout/fragment_splash_screen.xml\" value=\"0.259375\" />\r\n        <entry key=\"..\\:/DATN/RestaurantManagement/app/src/main/res/layout/fragment_table.xml\" value=\"0.259375\" />\r\n        <entry key=\"..\\:/DATN/RestaurantManagement/app/src/main/res/layout/fragment_table_manager.xml\" value=\"0.259375\" />\r\n        <entry key=\"..\\:/DATN/RestaurantManagement/app/src/main/res/layout/item_table.xml\" value=\"0.259375\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/drawable/bg_btn_add.xml\" value=\"0.2225\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/drawable/bg_btn_order.xml\" value=\"0.28\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/drawable/bg_button_announce.xml\" value=\"0.2155\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/drawable/bg_dialog_alert_complete.xml\" value=\"0.2165\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/drawable/bg_dialog_text_alert.xml\" value=\"0.2165\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/drawable/bg_popup_spinner.xml\" value=\"0.268\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/drawable/bg_quantity.xml\" value=\"0.2825\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/drawable/btn_decrease_product.xml\" value=\"0.2225\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/drawable/btn_increase_product.xml\" value=\"0.2225\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/drawable/ic_icon_add.xml\" value=\"0.2225\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/drawable/ic_pay_bill.xml\" value=\"0.2325\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/drawable/progress_custom_circle.xml\" value=\"0.2225\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/activity_add_product.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/activity_bill.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/activity_detail_product.xml\" value=\"0.2765625\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/activity_detail_table_selected.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/activity_food.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/activity_history.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/activity_login.xml\" value=\"0.24895833333333334\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/activity_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/activity_notification.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/activity_splash.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/activity_table_detail.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/activity_table_manage.xml\" value=\"0.23505434782608695\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/activity_verify.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/dialog_alert_complete.xml\" value=\"0.209375\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/dialog_announce.xml\" value=\"0.20833333333333334\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/dialog_change_pass.xml\" value=\"0.18795289855072464\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/dialog_filter.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/dialog_request.xml\" value=\"0.24791666666666667\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/fragment_appetizer.xml\" value=\"0.3605072463768116\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/fragment_dessert.xml\" value=\"0.3605072463768116\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/fragment_drinks.xml\" value=\"0.3605072463768116\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/fragment_main_dishes.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/item_design.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/item_detail_product.xml\" value=\"0.2755208333333333\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/item_noti.xml\" value=\"0.24791666666666667\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/item_product.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/item_product_table.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Home/RestaurantManagement/app/src/main/res/layout/item_table_parent.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/PC/AndroidStudioProjects/MyApplication/app/src/main/res/layout/activity_main.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/PC/AndroidStudioProjects/MyApplication/app/src/main/res/layout/activity_table_manage.xml\" value=\"0.14492753623188406\" />\r\n        <entry key=\"..\\:/Users/PC/AndroidStudioProjects/MyApplication/app/src/main/res/layout/fragment_drinks.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/PC/AndroidStudioProjects/MyApplication/app/src/main/res/layout/fragment_main_dishes.xml\" value=\"0.14492753623188406\" />\r\n        <entry key=\"..\\:/Users/PC/Desktop/DATN/RestaurantManagement/app/src/main/res/layout/activity_table_detail.xml\" value=\"0.176\" />\r\n        <entry key=\"..\\:/Users/PC/Desktop/DATN/RestaurantManagement/app/src/main/res/layout/activity_table_manage.xml\" value=\"0.15260416666666668\" />\r\n        <entry key=\"..\\:/abc/RestaurantManagement/app/src/main/res/layout/activity_account.xml\" value=\"0.259375\" />\r\n        <entry key=\"..\\:/abc/RestaurantManagement/app/src/main/res/layout/activity_bill.xml\" value=\"0.259375\" />\r\n        <entry key=\"..\\:/abc/RestaurantManagement/app/src/main/res/layout/activity_history.xml\" value=\"0.259375\" />\r\n        <entry key=\"..\\:/abc/RestaurantManagement/app/src/main/res/layout/activity_login.xml\" value=\"0.259375\" />\r\n        <entry key=\"..\\:/abc/RestaurantManagement/app/src/main/res/layout/activity_notification.xml\" value=\"0.259375\" />\r\n        <entry key=\"..\\:/abc/RestaurantManagement/app/src/main/res/layout/dialog_alert_complete.xml\" value=\"0.259375\" />\r\n        <entry key=\"..\\:/abc/RestaurantManagement/app/src/main/res/layout/dialog_change_pass.xml\" value=\"0.259375\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision feb1c3cc2bc87d9e2b4b43fddac7c82bdb4d1c80)
+++ b/.idea/misc.xml	(date 1674896964485)
@@ -26,7 +26,7 @@
         <entry key="..\:/Home/RestaurantManagement/app/src/main/res/layout/activity_detail_product.xml" value="0.2765625" />
         <entry key="..\:/Home/RestaurantManagement/app/src/main/res/layout/activity_detail_table_selected.xml" value="0.36666666666666664" />
         <entry key="..\:/Home/RestaurantManagement/app/src/main/res/layout/activity_food.xml" value="0.22" />
-        <entry key="..\:/Home/RestaurantManagement/app/src/main/res/layout/activity_history.xml" value="0.22" />
+        <entry key="..\:/Home/RestaurantManagement/app/src/main/res/layout/activity_history.xml" value="0.36666666666666664" />
         <entry key="..\:/Home/RestaurantManagement/app/src/main/res/layout/activity_login.xml" value="0.24895833333333334" />
         <entry key="..\:/Home/RestaurantManagement/app/src/main/res/layout/activity_main.xml" value="0.36666666666666664" />
         <entry key="..\:/Home/RestaurantManagement/app/src/main/res/layout/activity_notification.xml" value="0.36666666666666664" />
@@ -47,21 +47,34 @@
         <entry key="..\:/Home/RestaurantManagement/app/src/main/res/layout/item_detail_product.xml" value="0.2755208333333333" />
         <entry key="..\:/Home/RestaurantManagement/app/src/main/res/layout/item_noti.xml" value="0.24791666666666667" />
         <entry key="..\:/Home/RestaurantManagement/app/src/main/res/layout/item_product.xml" value="0.22" />
-        <entry key="..\:/Home/RestaurantManagement/app/src/main/res/layout/item_product_table.xml" value="0.22" />
-        <entry key="..\:/Home/RestaurantManagement/app/src/main/res/layout/item_table_parent.xml" value="0.33" />
+        <entry key="..\:/Home/RestaurantManagement/app/src/main/res/layout/item_product_table.xml" value="0.36666666666666664" />
         <entry key="..\:/Users/PC/AndroidStudioProjects/MyApplication/app/src/main/res/layout/activity_main.xml" value="0.1" />
         <entry key="..\:/Users/PC/AndroidStudioProjects/MyApplication/app/src/main/res/layout/activity_table_manage.xml" value="0.14492753623188406" />
         <entry key="..\:/Users/PC/AndroidStudioProjects/MyApplication/app/src/main/res/layout/fragment_drinks.xml" value="0.264" />
         <entry key="..\:/Users/PC/AndroidStudioProjects/MyApplication/app/src/main/res/layout/fragment_main_dishes.xml" value="0.14492753623188406" />
         <entry key="..\:/Users/PC/Desktop/DATN/RestaurantManagement/app/src/main/res/layout/activity_table_detail.xml" value="0.176" />
         <entry key="..\:/Users/PC/Desktop/DATN/RestaurantManagement/app/src/main/res/layout/activity_table_manage.xml" value="0.15260416666666668" />
+        <entry key="..\:/Users/PC/Desktop/DATN/RestaurantManagement/app/src/main/res/layout/item_product.xml" value="0.152" />
+        <entry key="..\:/Users/PC/Desktop/For work/RestaurantManagement/app/src/main/res/layout/item_table_child.xml" value="0.22826086956521738" />
+        <entry key="..\:/Users/PC/Desktop/For work/RestaurantManagement/app/src/main/res/layout/item_table_parent.xml" value="0.13360507246376813" />
         <entry key="..\:/abc/RestaurantManagement/app/src/main/res/layout/activity_account.xml" value="0.259375" />
         <entry key="..\:/abc/RestaurantManagement/app/src/main/res/layout/activity_bill.xml" value="0.259375" />
+        <entry key="..\:/abc/RestaurantManagement/app/src/main/res/layout/activity_feed_back.xml" value="0.259375" />
+        <entry key="..\:/abc/RestaurantManagement/app/src/main/res/layout/activity_food.xml" value="0.259375" />
         <entry key="..\:/abc/RestaurantManagement/app/src/main/res/layout/activity_history.xml" value="0.259375" />
         <entry key="..\:/abc/RestaurantManagement/app/src/main/res/layout/activity_login.xml" value="0.259375" />
         <entry key="..\:/abc/RestaurantManagement/app/src/main/res/layout/activity_notification.xml" value="0.259375" />
+        <entry key="..\:/abc/RestaurantManagement/app/src/main/res/layout/activity_table_detail.xml" value="0.259375" />
+        <entry key="..\:/abc/RestaurantManagement/app/src/main/res/layout/activity_table_manage.xml" value="0.259375" />
+        <entry key="..\:/abc/RestaurantManagement/app/src/main/res/layout/bottom_sheet_product.xml" value="0.259375" />
         <entry key="..\:/abc/RestaurantManagement/app/src/main/res/layout/dialog_alert_complete.xml" value="0.259375" />
         <entry key="..\:/abc/RestaurantManagement/app/src/main/res/layout/dialog_change_pass.xml" value="0.259375" />
+        <entry key="..\:/abc/RestaurantManagement/app/src/main/res/layout/dialog_send_email.xml" value="0.259375" />
+        <entry key="..\:/abc/RestaurantManagement/app/src/main/res/layout/dialog_show_detail_bill.xml" value="0.259375" />
+        <entry key="..\:/abc/RestaurantManagement/app/src/main/res/layout/fragment_main_dishes.xml" value="0.259375" />
+        <entry key="..\:/abc/RestaurantManagement/app/src/main/res/layout/item_bill.xml" value="0.259375" />
+        <entry key="..\:/abc/RestaurantManagement/app/src/main/res/layout/item_table_child.xml" value="0.259375" />
+        <entry key="..\:/abc/RestaurantManagement/app/src/main/res/layout/item_table_parent.xml" value="0.259375" />
       </map>
     </option>
   </component>
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'com.android.application'\r\n    id 'org.jetbrains.kotlin.android'\r\n    id 'kotlin-kapt'\r\n    id 'kotlin-parcelize'\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\nandroid {\r\n    compileSdk 32\r\n\r\n    defaultConfig {\r\n        applicationId \"com.poly.restaurant\"\r\n        minSdk 24\r\n        targetSdk 32\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_11\r\n        targetCompatibility JavaVersion.VERSION_11\r\n    }\r\n\r\n    buildFeatures{\r\n        viewBinding true\r\n        dataBinding true\r\n    }\r\n    buildToolsVersion '31.0.0'\r\n}\r\n\r\ndependencies {\r\n\r\n    // Firebase\r\n    implementation platform('com.google.firebase:firebase-bom:31.1.0')\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n    implementation 'com.google.firebase:firebase-messaging:23.1.0'\r\n\r\n    // room\r\n    implementation(\"androidx.room:room-runtime:2.4.3\")\r\n    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.2'\r\n    implementation 'androidx.navigation:navigation-ui-ktx:2.5.2'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'com.google.firebase:firebase-messaging:23.1.0'\r\n    implementation 'com.google.firebase:firebase-auth:21.1.0'\r\n    implementation 'com.google.firebase:firebase-database:20.1.0'\r\n    implementation 'com.google.firebase:firebase-analytics:21.2.0'\r\n    annotationProcessor(\"androidx.room:room-compiler:2.4.3\")\r\n    kapt(\"androidx.room:room-compiler:2.4.3\")\r\n    implementation(\"androidx.room:room-ktx:2.4.3\")\r\n\r\n    //Live data\r\n    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'\r\n    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'\r\n\r\n    // CircleIndicator\r\n    implementation 'me.relex:circleindicator:2.1.6'\r\n\r\n    // Retrofit2\r\n    implementation \"com.squareup.retrofit2:retrofit:2.9.0\"\r\n    implementation \"com.squareup.retrofit2:converter-gson:2.9.0\"\r\n    implementation \"com.squareup.okhttp3:logging-interceptor:4.4.0\"\r\n    implementation \"com.squareup.retrofit2:adapter-rxjava3:2.9.0\"\r\n\r\n    // Gson\r\n    implementation 'com.google.code.gson:gson:2.9.1'\r\n\r\n    // Event bus\r\n    implementation(\"org.greenrobot:eventbus:3.3.1\")\r\n\r\n    // Glide\r\n    implementation 'com.github.bumptech.glide:glide:4.13.2'\r\n    annotationProcessor 'com.github.bumptech.glide:compiler:4.13.0'\r\n\r\n    // RX\r\n    implementation \"io.reactivex.rxjava3:rxjava:3.1.5\"\r\n    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'\r\n    implementation(\"io.reactivex.rxjava3:rxkotlin:3.0.1\")\r\n\r\n    implementation 'androidx.appcompat:appcompat:1.5.1'\r\n    implementation 'com.google.android.material:material:1.6.1'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'\r\n    testImplementation 'junit:junit:4.13.2'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.3'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'\r\n\r\n    implementation 'com.google.android.material:material:1.8.0-beta01'\r\n    // qr code\r\n    implementation 'com.journeyapps:zxing-android-embedded:4.3.0'\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision feb1c3cc2bc87d9e2b4b43fddac7c82bdb4d1c80)
+++ b/app/build.gradle	(date 1674878067042)
@@ -53,6 +53,7 @@
     implementation 'com.google.firebase:firebase-auth:21.1.0'
     implementation 'com.google.firebase:firebase-database:20.1.0'
     implementation 'com.google.firebase:firebase-analytics:21.2.0'
+    implementation 'androidx.recyclerview:recyclerview:1.2.1'
     annotationProcessor("androidx.room:room-compiler:2.4.3")
     kapt("androidx.room:room-compiler:2.4.3")
     implementation("androidx.room:room-ktx:2.4.3")
